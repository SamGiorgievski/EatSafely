{"ast":null,"code":"var _jsxFileName = \"/Users/bradwilliams/EatSafely/client/src/pages/Translate.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Translate() {\n  async function translateToFrench(sentence) {\n    try {\n      const response = await fetch(\"https://libretranslate.com/translate\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          q: sentence,\n          source: \"en\",\n          target: \"fr\",\n          format: \"text\",\n          api_key: \"c2fc10e1-7f24-45b2-9cf7-ff69bc57d779\"\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      return data.text;\n    } catch (error) {\n      console.error(error);\n      return \"Error occurred while translating the text.\";\n    }\n  }\n  console.log(translateToFrench(\"This is a sentence\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n_c = Translate;\nexport default Translate;\nvar _c;\n$RefreshReg$(_c, \"Translate\");","map":{"version":3,"names":["React","axios","Translate","translateToFrench","sentence","response","fetch","method","body","JSON","stringify","q","source","target","format","api_key","headers","data","json","text","error","console","log"],"sources":["/Users/bradwilliams/EatSafely/client/src/pages/Translate.jsx"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nfunction Translate() {\n  async function translateToFrench(sentence) {\n    try {\n      const response = await fetch(\"https://libretranslate.com/translate\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          q: sentence,\n          source: \"en\",\n          target: \"fr\",\n          format: \"text\",\n          api_key: \"c2fc10e1-7f24-45b2-9cf7-ff69bc57d779\",\n        }),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      const data = await response.json();\n      return data.text;\n    } catch (error) {\n      console.error(error);\n      return \"Error occurred while translating the text.\";\n    }\n  }\n\n  console.log(translateToFrench(\"This is a sentence\"));\n\n  return <div></div>;\n}\n\nexport default Translate;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,SAAS,GAAG;EACnB,eAAeC,iBAAiB,CAACC,QAAQ,EAAE;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,CAAC,EAAEP,QAAQ;UACXQ,MAAM,EAAE,IAAI;UACZC,MAAM,EAAE,IAAI;UACZC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;QACX,CAAC,CAAC;QACFC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAChD,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,EAAE;MAClC,OAAOD,IAAI,CAACE,IAAI;IAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,OAAO,4CAA4C;IACrD;EACF;EAEAC,OAAO,CAACC,GAAG,CAACnB,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;EAEpD,oBAAO;IAAA;IAAA;IAAA;EAAA,QAAW;AACpB;AAAC,KAzBQD,SAAS;AA2BlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
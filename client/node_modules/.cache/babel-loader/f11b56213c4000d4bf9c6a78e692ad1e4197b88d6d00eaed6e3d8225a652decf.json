{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/bradwilliams/Builds/EatSafely/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/bradwilliams/Builds/EatSafely/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar createWorker = require('./createWorker');\nvar recognize = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(image, langs, options) {\n    var worker;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return createWorker(options);\n        case 2:\n          worker = _context2.sent;\n          _context2.next = 5;\n          return worker.loadLanguage(langs);\n        case 5:\n          _context2.next = 7;\n          return worker.initialize(langs);\n        case 7:\n          return _context2.abrupt(\"return\", worker.recognize(image).finally( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return worker.terminate();\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }))));\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function recognize(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar detect = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(image, options) {\n    var worker;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return createWorker(options);\n        case 2:\n          worker = _context4.sent;\n          _context4.next = 5;\n          return worker.loadLanguage('osd');\n        case 5:\n          _context4.next = 7;\n          return worker.initialize('osd');\n        case 7:\n          return _context4.abrupt(\"return\", worker.detect(image).finally( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n            return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return worker.terminate();\n                case 2:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }, _callee3);\n          }))));\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function detect(_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  recognize: recognize,\n  detect: detect\n};","map":{"version":3,"names":["createWorker","require","recognize","image","langs","options","worker","loadLanguage","initialize","finally","terminate","detect","module","exports"],"sources":["/Users/bradwilliams/Builds/EatSafely/client/node_modules/tesseract.js/src/Tesseract.js"],"sourcesContent":["const createWorker = require('./createWorker');\n\nconst recognize = async (image, langs, options) => {\n  const worker = await createWorker(options);\n  await worker.loadLanguage(langs);\n  await worker.initialize(langs);\n  return worker.recognize(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nconst detect = async (image, options) => {\n  const worker = await createWorker(options);\n  await worker.loadLanguage('osd');\n  await worker.initialize('osd');\n  return worker.detect(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nmodule.exports = {\n  recognize,\n  detect,\n};\n"],"mappings":";;AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE9C,IAAMC,SAAS;EAAA,sEAAG,kBAAOC,KAAK,EAAEC,KAAK,EAAEC,OAAO;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OACvBL,YAAY,CAACK,OAAO,CAAC;QAAA;UAApCC,MAAM;UAAA;UAAA,OACNA,MAAM,CAACC,YAAY,CAACH,KAAK,CAAC;QAAA;UAAA;UAAA,OAC1BE,MAAM,CAACE,UAAU,CAACJ,KAAK,CAAC;QAAA;UAAA,kCACvBE,MAAM,CAACJ,SAAS,CAACC,KAAK,CAAC,CAC3BM,OAAO,0EAAC;YAAA;cAAA;gBAAA;kBAAA;kBAAA,OACDH,MAAM,CAACI,SAAS,EAAE;gBAAA;gBAAA;kBAAA;cAAA;YAAA;UAAA,CACzB,GAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACL;EAAA,gBARKR,SAAS;IAAA;EAAA;AAAA,GAQd;AAED,IAAMS,MAAM;EAAA,uEAAG,kBAAOR,KAAK,EAAEE,OAAO;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OACbL,YAAY,CAACK,OAAO,CAAC;QAAA;UAApCC,MAAM;UAAA;UAAA,OACNA,MAAM,CAACC,YAAY,CAAC,KAAK,CAAC;QAAA;UAAA;UAAA,OAC1BD,MAAM,CAACE,UAAU,CAAC,KAAK,CAAC;QAAA;UAAA,kCACvBF,MAAM,CAACK,MAAM,CAACR,KAAK,CAAC,CACxBM,OAAO,0EAAC;YAAA;cAAA;gBAAA;kBAAA;kBAAA,OACDH,MAAM,CAACI,SAAS,EAAE;gBAAA;gBAAA;kBAAA;cAAA;YAAA;UAAA,CACzB,GAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACL;EAAA,gBARKC,MAAM;IAAA;EAAA;AAAA,GAQX;AAEDC,MAAM,CAACC,OAAO,GAAG;EACfX,SAAS,EAATA,SAAS;EACTS,MAAM,EAANA;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
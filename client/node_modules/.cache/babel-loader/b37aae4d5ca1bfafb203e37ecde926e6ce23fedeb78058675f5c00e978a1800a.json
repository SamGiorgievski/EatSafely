{"ast":null,"code":"var _jsxFileName = \"/Users/bradwilliams/EatSafely/client/src/pages/scan_result.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./scan_result.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ScanResult(_ref) {\n  _s();\n  let {\n    ocrState,\n    confidence,\n    intolerances,\n    backButton,\n    progress,\n    loading\n  } = _ref;\n  const [matches, setMatches] = useState([]);\n  const navigate = useNavigate();\n  // useEffect(() => {\n  //   findMatches(intolerances, ocrState.text)\n  // }, [findMatches]);\n\n  function findMatches(intolerances, str) {\n    if (!intolerances) {\n      return navigate(\"/login\");\n    }\n    let matches = [];\n    let newStr = \"\";\n    let validChars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\n    let intoleranceArray = intolerances.split(\", \");\n    for (let i = 0; i < str.length; i++) {\n      let char = str[i];\n      if (validChars.indexOf(char) !== -1) {\n        newStr += char;\n      }\n    }\n    let strArray = newStr.split(\" \");\n    // console.log(`find matches: newStr ${newStr}`);\n    // console.log(`find matches: strArray ${strArray}`);\n    // console.log(`find matches: strArray ${typeof strArray}`);\n    // console.log(`find matches: intolerances - ${intoleranceArray}`)\n    // console.log(`find matches: intolerances - ${typeof intoleranceArray}`)\n\n    for (let i = 0; i < intoleranceArray.length; i++) {\n      for (let j = 0; j < strArray.length; j++) {\n        if (intoleranceArray[i] === strArray[j]) {\n          matches.push(intoleranceArray[i]);\n          break;\n        }\n      }\n    }\n    setMatches(matches);\n    return matches;\n  }\n  function highlightText(intolerances, str) {\n    // take out punctuation\n    let newStr = \"\";\n    const validChars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ \";\n    // /[A-Z]\\i/\n\n    for (let i = 0; i < str.length; i++) {\n      let char = str[i];\n      if (validChars.indexOf(char) !== -1) {\n        newStr += char;\n      }\n    }\n\n    // format inputs\n    const matches = [];\n    let intoleranceArry;\n    let intoleranceLowerCase = intolerances.toLowerCase();\n    let newStrLowerCase = newStr.toLowerCase();\n    let strArray = newStrLowerCase.split(\" \");\n    let lowercaseOcrState = ocrState.array.map(index => {\n      return index.toLowerCase();\n    });\n    // console.log(`ocrState.array: ${ocrState.array}`)\n    // console.log(`str: ${str}`)\n    // console.log(`newStr: ${newStr}`)\n    // console.log(`newStrLowerCase: ${newStrLowerCase}`)\n    // console.log(`strArray: ${strArray}`)\n    // // str.includes(combination)\n    // console.log(`lowercaseOcrState: ${lowercaseOcrState}`)\n\n    // find matches\n    for (let i = 0; i < intoleranceArray.length; i++) {\n      for (let j = 0; j < strArray.length; j++) {\n        if (intoleranceArray[i] === strArray[j]) {\n          matches.push(intoleranceArray[i]);\n          break;\n        }\n      }\n    }\n\n    // highlight text\n    const highlighterReturn = [];\n    let key = 0;\n    for (let i = 0; i < matches.length; i++) {\n      for (let j = 0; j < lowercaseOcrState.length; j++) {\n        key += 1;\n        if (lowercaseOcrState[j].includes(matches[i])) {\n          highlighterReturn.push( /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"highlight\",\n            children: [\" \", matches[i].toUpperCase()]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this));\n          key += 1;\n          highlighterReturn.push( /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \",\"\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 34\n          }, this));\n        } else {\n          highlighterReturn.push(`${ocrState.array[j]} `);\n        }\n      }\n    }\n    if (matches[0] && !loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result_matches\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result_matches_warning\",\n          children: \"Results: Warning, this product contains harmful ingredients!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result_matches_text\",\n          children: highlighterReturn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this);\n    } else if (!matches[0] && !loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result_nomatches\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result_nomatches_warning\",\n          children: \"Results: This product is safe for consumption!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result_nomatches_text\",\n          children: ocrState.array.join(\" \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"results\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-box\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"results\",\n        id: \"inner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_with_highlight\",\n          children: highlightText(intolerances, ocrState.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), matches && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: backButton,\n        children: \"Scan again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(ScanResult, \"PClh80V4Rfps2cTRP3A2BvZ2dOc=\", false, function () {\n  return [useNavigate];\n});\n_c = ScanResult;\nvar _c;\n$RefreshReg$(_c, \"ScanResult\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ScanResult","ocrState","confidence","intolerances","backButton","progress","loading","matches","setMatches","navigate","findMatches","str","newStr","validChars","intoleranceArray","split","i","length","char","indexOf","strArray","j","push","highlightText","intoleranceArry","intoleranceLowerCase","toLowerCase","newStrLowerCase","lowercaseOcrState","array","map","index","highlighterReturn","key","includes","toUpperCase","join","text"],"sources":["/Users/bradwilliams/EatSafely/client/src/pages/scan_result.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./scan_result.scss\";\n\nexport default function ScanResult({\n  ocrState,\n  confidence,\n  intolerances,\n  backButton,\n  progress,\n  loading,\n}) {\n  const [matches, setMatches] = useState([]);\n  const navigate = useNavigate();\n  // useEffect(() => {\n  //   findMatches(intolerances, ocrState.text)\n  // }, [findMatches]);\n\n  function findMatches(intolerances, str) {\n    if (!intolerances) {\n      return navigate(\"/login\");\n    }\n\n    let matches = [];\n    let newStr = \"\";\n    let validChars =\n      \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\n    let intoleranceArray = intolerances.split(\", \");\n\n    for (let i = 0; i < str.length; i++) {\n      let char = str[i];\n      if (validChars.indexOf(char) !== -1) {\n        newStr += char;\n      }\n    }\n\n    let strArray = newStr.split(\" \");\n    // console.log(`find matches: newStr ${newStr}`);\n    // console.log(`find matches: strArray ${strArray}`);\n    // console.log(`find matches: strArray ${typeof strArray}`);\n    // console.log(`find matches: intolerances - ${intoleranceArray}`)\n    // console.log(`find matches: intolerances - ${typeof intoleranceArray}`)\n\n    for (let i = 0; i < intoleranceArray.length; i++) {\n      for (let j = 0; j < strArray.length; j++) {\n        if (intoleranceArray[i] === strArray[j]) {\n          matches.push(intoleranceArray[i]);\n          break;\n        }\n      }\n    }\n\n    setMatches(matches);\n    return matches;\n  }\n\n  function highlightText(intolerances, str) {\n    // take out punctuation\n    let newStr = \"\";\n    const validChars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ \";\n    // /[A-Z]\\i/\n\n    for (let i = 0; i < str.length; i++) {\n      let char = str[i];\n      if (validChars.indexOf(char) !== -1) {\n        newStr += char;\n      }\n    }\n\n    // format inputs\n    const matches = [];\n    let intoleranceArry;\n    let intoleranceLowerCase = intolerances.toLowerCase();\n    let newStrLowerCase = newStr.toLowerCase();\n    let strArray = newStrLowerCase.split(\" \");\n    let lowercaseOcrState = ocrState.array.map((index) => {\n      return index.toLowerCase();\n    });\n    // console.log(`ocrState.array: ${ocrState.array}`)\n    // console.log(`str: ${str}`)\n    // console.log(`newStr: ${newStr}`)\n    // console.log(`newStrLowerCase: ${newStrLowerCase}`)\n    // console.log(`strArray: ${strArray}`)\n    // // str.includes(combination)\n    // console.log(`lowercaseOcrState: ${lowercaseOcrState}`)\n\n    // find matches\n    for (let i = 0; i < intoleranceArray.length; i++) {\n      for (let j = 0; j < strArray.length; j++) {\n        if (intoleranceArray[i] === strArray[j]) {\n          matches.push(intoleranceArray[i]);\n          break;\n        }\n      }\n    }\n\n    // highlight text\n    const highlighterReturn = [];\n    let key = 0;\n    for (let i = 0; i < matches.length; i++) {\n      for (let j = 0; j < lowercaseOcrState.length; j++) {\n        key += 1;\n        if (lowercaseOcrState[j].includes(matches[i])) {\n          highlighterReturn.push(\n            <span className=\"highlight\" key={key}>\n              {\" \"}\n              {matches[i].toUpperCase()}\n            </span>\n          );\n          key += 1;\n          highlighterReturn.push(<span key={key}>,</span>);\n        } else {\n          highlighterReturn.push(`${ocrState.array[j]} `);\n        }\n      }\n    }\n\n    if (matches[0] && !loading) {\n      return (\n        <div className=\"result_matches\">\n          <div className=\"result_matches_warning\">\n            Results: Warning, this product contains harmful ingredients!\n          </div>\n          <div className=\"result_matches_text\">{highlighterReturn}</div>\n        </div>\n      );\n    } else if (!matches[0] && !loading) {\n      return (\n        <div className=\"result_nomatches\">\n          <div className=\"result_nomatches_warning\">\n            Results: This product is safe for consumption!\n          </div>\n          <div className=\"result_nomatches_text\">\n            {ocrState.array.join(\" \")}\n          </div>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <main className=\"results\">\n      <div className=\"text-box\">\n        <span className=\"results\" id=\"inner\">\n          {/* {ocrState.text && <span> Results: {ocrState.text}</span>} */}\n          {/* {confidence > 55 && <span>High confidence : {confidence}%</span>} */}\n          <div className=\"text_with_highlight\">\n            {highlightText(intolerances, ocrState.text)}\n          </div>\n        </span>\n      </div>\n\n      {/* Scan new */}\n\n      {matches && (\n        <div className=\"navigation\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={backButton}\n          >\n            Scan again\n          </button>\n        </div>\n      )}\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/bradwilliams/EatSafely/client/src/pages/scan_result.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./scan_result.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScanResult = _ref => {\n  _s();\n  let {\n    ocrState,\n    intolerances\n  } = _ref;\n  const [matches, setMatches] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!intolerances) {\n      navigate(\"/login\");\n    }\n  }, [intolerances, navigate]);\n  useEffect(() => {\n    if (!intolerances) {\n      return;\n    }\n    const intoleranceArray = intolerances.toLowerCase().split(\", \");\n    const strArray = ocrState.array.map(word => word.toLowerCase()).filter(char => /^[a-z]+$/i.test(char));\n    const matches = strArray.filter(word => intoleranceArray.includes(word));\n    setMatches(matches);\n  }, [intolerances, ocrState]);\n  if (!intolerances) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [matches.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result_matches\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result_matches_warning\",\n        children: \"Results: Warning, this product contains harmful ingredients!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result_matches_text\",\n        children: ocrState.array.map((word, j) => {\n          const lowercaseWord = word.toLowerCase();\n          const isMatch = matches.some(match => lowercaseWord.includes(match));\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `word ${isMatch ? \"highlight\" : \"\"}`,\n            children: word.toUpperCase()\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), matches.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result_nomatches\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result_nomatches_warning\",\n        children: \"Results: This product is safe for consumption!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result_nomatches_text\",\n        children: ocrState.array.join(\" \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ScanResult, \"gBLKMZW7lDDlb0/HmGhbWsBkJiE=\", false, function () {\n  return [useNavigate];\n});\n_c = ScanResult;\nexport default ScanResult;\nvar _c;\n$RefreshReg$(_c, \"ScanResult\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ScanResult","ocrState","intolerances","matches","setMatches","navigate","intoleranceArray","toLowerCase","split","strArray","array","map","word","filter","char","test","includes","length","j","lowercaseWord","isMatch","some","match","toUpperCase","join"],"sources":["/Users/bradwilliams/EatSafely/client/src/pages/scan_result.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./scan_result.scss\";\n\nconst ScanResult = ({ ocrState, intolerances }) => {\n  const [matches, setMatches] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!intolerances) {\n      navigate(\"/login\");\n    }\n  }, [intolerances, navigate]);\n\n  useEffect(() => {\n    if (!intolerances) {\n      return;\n    }\n\n    const intoleranceArray = intolerances.toLowerCase().split(\", \");\n    const strArray = ocrState.array\n      .map((word) => word.toLowerCase())\n      .filter((char) => /^[a-z]+$/i.test(char));\n\n    const matches = strArray.filter((word) => intoleranceArray.includes(word));\n    setMatches(matches);\n  }, [intolerances, ocrState]);\n\n  if (!intolerances) {\n    return null;\n  }\n\n  return (\n    <>\n      {matches.length > 0 && (\n        <div className=\"result_matches\">\n          <div className=\"result_matches_warning\">\n            Results: Warning, this product contains harmful ingredients!\n          </div>\n          <div className=\"result_matches_text\">\n            {ocrState.array.map((word, j) => {\n              const lowercaseWord = word.toLowerCase();\n              const isMatch = matches.some((match) =>\n                lowercaseWord.includes(match)\n              );\n\n              return (\n                <span key={j} className={`word ${isMatch ? \"highlight\" : \"\"}`}>\n                  {word.toUpperCase()}\n                </span>\n              );\n            })}\n          </div>\n        </div>\n      )}\n      {matches.length === 0 && (\n        <div className=\"result_nomatches\">\n          <div className=\"result_nomatches_warning\">\n            Results: This product is safe for consumption!\n          </div>\n          <div className=\"result_nomatches_text\">\n            {ocrState.array.join(\" \")}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ScanResult;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,oBAAoB;AAAC;AAAA;AAE5B,MAAMC,UAAU,GAAG,QAAgC;EAAA;EAAA,IAA/B;IAAEC,QAAQ;IAAEC;EAAa,CAAC;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMQ,QAAQ,GAAGN,WAAW,EAAE;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,YAAY,EAAE;MACjBG,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACH,YAAY,EAAEG,QAAQ,CAAC,CAAC;EAE5BP,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,YAAY,EAAE;MACjB;IACF;IAEA,MAAMI,gBAAgB,GAAGJ,YAAY,CAACK,WAAW,EAAE,CAACC,KAAK,CAAC,IAAI,CAAC;IAC/D,MAAMC,QAAQ,GAAGR,QAAQ,CAACS,KAAK,CAC5BC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACL,WAAW,EAAE,CAAC,CACjCM,MAAM,CAAEC,IAAI,IAAK,WAAW,CAACC,IAAI,CAACD,IAAI,CAAC,CAAC;IAE3C,MAAMX,OAAO,GAAGM,QAAQ,CAACI,MAAM,CAAED,IAAI,IAAKN,gBAAgB,CAACU,QAAQ,CAACJ,IAAI,CAAC,CAAC;IAC1ER,UAAU,CAACD,OAAO,CAAC;EACrB,CAAC,EAAE,CAACD,YAAY,EAAED,QAAQ,CAAC,CAAC;EAE5B,IAAI,CAACC,YAAY,EAAE;IACjB,OAAO,IAAI;EACb;EAEA,oBACE;IAAA,WACGC,OAAO,CAACc,MAAM,GAAG,CAAC,iBACjB;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAK,SAAS,EAAC,wBAAwB;QAAA,UAAC;MAExC;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAK,SAAS,EAAC,qBAAqB;QAAA,UACjChB,QAAQ,CAACS,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEM,CAAC,KAAK;UAC/B,MAAMC,aAAa,GAAGP,IAAI,CAACL,WAAW,EAAE;UACxC,MAAMa,OAAO,GAAGjB,OAAO,CAACkB,IAAI,CAAEC,KAAK,IACjCH,aAAa,CAACH,QAAQ,CAACM,KAAK,CAAC,CAC9B;UAED,oBACE;YAAc,SAAS,EAAG,QAAOF,OAAO,GAAG,WAAW,GAAG,EAAG,EAAE;YAAA,UAC3DR,IAAI,CAACW,WAAW;UAAE,GADVL,CAAC;YAAA;YAAA;YAAA;UAAA,QAEL;QAEX,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QAET,EACAf,OAAO,CAACc,MAAM,KAAK,CAAC,iBACnB;MAAK,SAAS,EAAC,kBAAkB;MAAA,wBAC/B;QAAK,SAAS,EAAC,0BAA0B;QAAA,UAAC;MAE1C;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAK,SAAS,EAAC,uBAAuB;QAAA,UACnChB,QAAQ,CAACS,KAAK,CAACc,IAAI,CAAC,GAAG;MAAC;QAAA;QAAA;QAAA;MAAA,QACrB;IAAA;MAAA;MAAA;MAAA;IAAA,QAET;EAAA,gBACA;AAEP,CAAC;AAAC,GA/DIxB,UAAU;EAAA,QAEGD,WAAW;AAAA;AAAA,KAFxBC,UAAU;AAiEhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
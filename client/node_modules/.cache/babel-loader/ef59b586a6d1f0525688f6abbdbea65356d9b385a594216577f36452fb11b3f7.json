{"ast":null,"code":"import _objectSpread from\"/Users/bradwilliams/Builds/EatSafely/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/bradwilliams/Builds/EatSafely/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import ScanFirst from\"./scan_first\";import ScanResult from\"./scan_result\";import ScanLoading from\"./scan_loading\";import EditProfile from\"../componetns/EditProfile\";import\"./ScanImage.scss\";import{useGlobalContext}from\"../context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Tesseract=require(\"tesseract.js\");function ScanImage(_ref){var intolerances=_ref.intolerances,setIntolerances=_ref.setIntolerances,showModal=_ref.showModal,setShowModal=_ref.setShowModal,toggleModal=_ref.toggleModal;var _useGlobalContext=useGlobalContext(),storedData=_useGlobalContext.storedData,setStoredData=_useGlobalContext.setStoredData;// Page state\nvar _useState=useState({page:\"first\",loading:false}),_useState2=_slicedToArray(_useState,2),scanState=_useState2[0],setscanState=_useState2[1];// Ocr data states\nvar _useState3=useState({text:\"\",array:[]}),_useState4=_slicedToArray(_useState3,2),ocrState=_useState4[0],setOcrState=_useState4[1];// Loading states\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],isLoading=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),progress=_useState8[0],setProgress=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),confidence=_useState10[0],setConfidence=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),imagePath=_useState12[0],setImagePath=_useState12[1];// Upload file event handler\nvar handleChange=function handleChange(event){setImagePath(URL.createObjectURL(event.target.files[0]));};// UseEffect for testing\nuseEffect(function(){console.log(scanState);// searchText([\"Wheat\", \"cake\"], intolerances);\nconsole.log(ocrState.text);},[scanState,ocrState.text]);// Scan image onClick event handler\nvar handleClick=function handleClick(){if(!imagePath){return;}isLoading(true);// Change page state to loading\nsetscanState(function(prev){return _objectSpread(_objectSpread({},prev),{},{loading:true});});// Start tesseract OCR\nTesseract.recognize(imagePath,\"eng\",{logger:function logger(m){setProgress(m.progress);}}).catch(function(err){console.error(err);}).then(function(result){console.log(result);isLoading(false);// Get Confidence score\nvar confidenceResult=result.data.confidence;setConfidence(confidenceResult);var text=result.data.text;if(confidenceResult<50){console.log(\"HELPPPPP\");return setOcrState(function(prev){return _objectSpread(_objectSpread({},prev),{},{img:/*#__PURE__*/_jsx(\"img\",{src:\"https://www.gran-turismo.com/gtsport/decal/5845681194092494864_1.png\",alt:\"warning\",className:\"checkmark\"})});});}else{setOcrState(function(prev){return _objectSpread(_objectSpread({},prev),{},{text:text,array:confidentTextArray(result),img:/*#__PURE__*/_jsx(\"img\",{src:\"https://www.gran-turismo.com/gtsport/decal/5845681194092494864_1.png\",alt:\"warning\",className:\"checkmark\"})});});}});// Change scanState to view results\nsetscanState(function(prev){return _objectSpread(_objectSpread({},prev),{},{page:\"result\",loading:false});});};// returns array of text where each word is above a % of confidence\nfunction confidentTextArray(result){var returnArray=[];var wordArray=result.data.words;wordArray.forEach(function(word){if(word.confidence>=50){returnArray.push(word.text);}});return returnArray;}// Back/retry button\nfunction backButton(){setscanState(function(prev){return _objectSpread(_objectSpread({},prev),{},{page:\"first\"});});setOcrState(function(prev){return _objectSpread(_objectSpread({},prev),{},{text:\"\",array:[]});});setImagePath(\"\");}return/*#__PURE__*/_jsx(\"div\",{className:\"scan_card\",children:/*#__PURE__*/_jsxs(\"section\",{className:\"ocr\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"instructions\",children:\"Please upload an image to scan\"}),/*#__PURE__*/_jsxs(\"div\",{children:[imagePath&&/*#__PURE__*/_jsx(\"img\",{src:imagePath,alt:\"Upload\"}),!imagePath&&/*#__PURE__*/_jsx(\"img\",{src:\"https://via.placeholder.com/300/808080.png/fff?text=Upload+image+to+begin\",alt:\"scanned_image\"})]}),!loading?/*#__PURE__*/_jsx(\"div\",{className:\"text-box\"}):/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"Loading \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"progress\",{value:progress})]}),scanState.page===\"first\"&&/*#__PURE__*/_jsx(ScanFirst,{intolerances:intolerances,setIntolerances:setIntolerances,setOcrState:setOcrState,handleClick:handleClick,setConfidence:setConfidence,handleChange:handleChange,setImagePath:setImagePath,imagePath:imagePath,toggleModal:toggleModal,storedData:storedData}),scanState.page===\"result\"&&/*#__PURE__*/_jsx(ScanResult,{intolerances:intolerances,ocrState:ocrState,confidence:confidence,backButton:backButton,progress:progress,loading:loading}),showModal&&/*#__PURE__*/_jsx(EditProfile,{toggle:toggleModal,state:(showModal,setShowModal),storedData:storedData,setIntolerances:setIntolerances})]})});}export default ScanImage;","map":{"version":3,"names":["useState","useEffect","ScanFirst","ScanResult","ScanLoading","EditProfile","useGlobalContext","Tesseract","require","ScanImage","intolerances","setIntolerances","showModal","setShowModal","toggleModal","storedData","setStoredData","page","loading","scanState","setscanState","text","array","ocrState","setOcrState","isLoading","progress","setProgress","confidence","setConfidence","imagePath","setImagePath","handleChange","event","URL","createObjectURL","target","files","console","log","handleClick","prev","recognize","logger","m","catch","err","error","then","result","confidenceResult","data","img","confidentTextArray","returnArray","wordArray","words","forEach","word","push","backButton"],"sources":["/Users/bradwilliams/Builds/EatSafely/client/src/pages/ScanImage.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport ScanFirst from \"./scan_first\";\nimport ScanResult from \"./scan_result\";\nimport ScanLoading from \"./scan_loading\";\nimport EditProfile from \"../componetns/EditProfile\";\nimport \"./ScanImage.scss\";\nimport { useGlobalContext } from \"../context\";\nconst Tesseract = require(\"tesseract.js\");\n\nfunction ScanImage({\n  intolerances,\n  setIntolerances,\n  showModal,\n  setShowModal,\n  toggleModal,\n}) {\n  const { storedData, setStoredData } = useGlobalContext();\n\n  // Page state\n  const [scanState, setscanState] = useState({\n    page: \"first\",\n    loading: false,\n  });\n  // Ocr data states\n  const [ocrState, setOcrState] = useState({\n    text: \"\",\n    array: [],\n  });\n  // Loading states\n  const [loading, isLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [confidence, setConfidence] = useState();\n  const [imagePath, setImagePath] = useState(\"\");\n\n  // Upload file event handler\n  const handleChange = (event) => {\n    setImagePath(URL.createObjectURL(event.target.files[0]));\n  };\n\n  // UseEffect for testing\n  useEffect(() => {\n    console.log(scanState);\n    // searchText([\"Wheat\", \"cake\"], intolerances);\n    console.log(ocrState.text);\n  }, [scanState, ocrState.text]);\n\n  // Scan image onClick event handler\n  const handleClick = () => {\n    if (!imagePath) {\n      return;\n    }\n\n    isLoading(true);\n    // Change page state to loading\n    setscanState((prev) => ({\n      ...prev,\n      loading: true,\n    }));\n\n    // Start tesseract OCR\n    Tesseract.recognize(imagePath, \"eng\", {\n      logger: (m) => {\n        setProgress(m.progress);\n      },\n    })\n      .catch((err) => {\n        console.error(err);\n      })\n      .then((result) => {\n        console.log(result);\n        isLoading(false);\n\n        // Get Confidence score\n        let confidenceResult = result.data.confidence;\n        setConfidence(confidenceResult);\n        let text = result.data.text;\n\n        if (confidenceResult < 50) {\n          console.log(\"HELPPPPP\");\n          return setOcrState((prev) => ({\n            ...prev,\n            img: (\n              <img\n                src=\"https://www.gran-turismo.com/gtsport/decal/5845681194092494864_1.png\"\n                alt=\"warning\"\n                className=\"checkmark\"\n              />\n            ),\n          }));\n        } else {\n          setOcrState((prev) => ({\n            ...prev,\n            text,\n            array: confidentTextArray(result),\n            img: (\n              <img\n                src=\"https://www.gran-turismo.com/gtsport/decal/5845681194092494864_1.png\"\n                alt=\"warning\"\n                className=\"checkmark\"\n              />\n            ),\n          }));\n        }\n      });\n\n    // Change scanState to view results\n    setscanState((prev) => ({\n      ...prev,\n      page: \"result\",\n      loading: false,\n    }));\n  };\n\n  // returns array of text where each word is above a % of confidence\n  function confidentTextArray(result) {\n    const returnArray = [];\n    const wordArray = result.data.words;\n\n    wordArray.forEach((word) => {\n      if (word.confidence >= 50) {\n        returnArray.push(word.text);\n      }\n    });\n\n    return returnArray;\n  }\n\n  // Back/retry button\n\n  function backButton() {\n    setscanState((prev) => ({\n      ...prev,\n      page: \"first\",\n    }));\n\n    setOcrState((prev) => ({\n      ...prev,\n      text: \"\",\n      array: [],\n    }));\n\n    setImagePath(\"\");\n  }\n\n  return (\n    <div className=\"scan_card\">\n      <section className=\"ocr\">\n        <h3 className=\"instructions\">Please upload an image to scan</h3>\n\n        {/* View uploaded image */}\n        <div>\n          {imagePath && <img src={imagePath} alt=\"Upload\" />}\n          {/* https://placeholder.com/ */}\n          {!imagePath && (\n            <img\n              src={\n                \"https://via.placeholder.com/300/808080.png/fff?text=Upload+image+to+begin\"\n              }\n              alt=\"scanned_image\"\n            />\n          )}\n        </div>\n\n        {/* Loading state */}\n        {!loading ? (\n          <div className=\"text-box\"></div>\n        ) : (\n          <label>\n            <br />\n            <br />\n            Loading <br />\n            <progress value={progress}></progress>\n          </label>\n        )}\n\n        {/* Confidence state\n        {confidence < 55 ? (\n          <p>\n            The confidence score of this scan is: {confidence}% <br />\n            Please take a more clear picture to get more confident results...\n          </p>\n        ) : (\n          <p></p>\n        )} */}\n\n        {/* Results rendering */}\n\n        {scanState.page === \"first\" && (\n          <ScanFirst\n            intolerances={intolerances}\n            setIntolerances={setIntolerances}\n            setOcrState={setOcrState}\n            handleClick={handleClick}\n            setConfidence={setConfidence}\n            handleChange={handleChange}\n            setImagePath={setImagePath}\n            imagePath={imagePath}\n            toggleModal={toggleModal}\n            storedData={storedData}\n          ></ScanFirst>\n        )}\n\n        {/* {scanState.loading === true && <Scan_loading progress={progress} loading={loading}></Scan_loading>} */}\n        {scanState.page === \"result\" && (\n          <ScanResult\n            intolerances={intolerances}\n            ocrState={ocrState}\n            confidence={confidence}\n            backButton={backButton}\n            progress={progress}\n            loading={loading}\n          ></ScanResult>\n        )}\n\n        {/* Edit Intolerances */}\n        {showModal && (\n          <EditProfile\n            toggle={toggleModal}\n            state={(showModal, setShowModal)}\n            storedData={storedData}\n            setIntolerances={setIntolerances}\n          />\n        )}\n      </section>\n    </div>\n  );\n}\n\nexport default ScanImage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
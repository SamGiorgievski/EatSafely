{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/bradwilliams/Builds/EatSafely/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _toConsumableArray = require(\"/Users/bradwilliams/Builds/EatSafely/client/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _asyncToGenerator = require(\"/Users/bradwilliams/Builds/EatSafely/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _this = this;\nvar createJob = require('./createJob');\nvar _require = require('./utils/log'),\n  log = _require.log;\nvar getId = require('./utils/getId');\nvar schedulerCounter = 0;\nmodule.exports = function () {\n  var id = getId('Scheduler', schedulerCounter);\n  var workers = {};\n  var runningWorkers = {};\n  var jobQueue = [];\n  schedulerCounter += 1;\n  var getQueueLen = function getQueueLen() {\n    return jobQueue.length;\n  };\n  var getNumWorkers = function getNumWorkers() {\n    return Object.keys(workers).length;\n  };\n  var dequeue = function dequeue() {\n    if (jobQueue.length !== 0) {\n      var wIds = Object.keys(workers);\n      for (var i = 0; i < wIds.length; i += 1) {\n        if (typeof runningWorkers[wIds[i]] === 'undefined') {\n          jobQueue[0](workers[wIds[i]]);\n          break;\n        }\n      }\n    }\n  };\n  var queue = function queue(action, payload) {\n    return new Promise(function (resolve, reject) {\n      var job = createJob({\n        action: action,\n        payload: payload\n      });\n      jobQueue.push( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(w) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                jobQueue.shift();\n                runningWorkers[w.id] = job;\n                _context.prev = 2;\n                _context.t0 = resolve;\n                _context.next = 6;\n                return w[action].apply(_this, [].concat(_toConsumableArray(payload), [job.id]));\n              case 6:\n                _context.t1 = _context.sent;\n                (0, _context.t0)(_context.t1);\n                _context.next = 13;\n                break;\n              case 10:\n                _context.prev = 10;\n                _context.t2 = _context[\"catch\"](2);\n                reject(_context.t2);\n              case 13:\n                _context.prev = 13;\n                delete runningWorkers[w.id];\n                dequeue();\n                return _context.finish(13);\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, null, [[2, 10, 13, 17]]);\n        }));\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n      log(\"[\".concat(id, \"]: Add \").concat(job.id, \" to JobQueue\"));\n      log(\"[\".concat(id, \"]: JobQueue length=\").concat(jobQueue.length));\n      dequeue();\n    });\n  };\n  var addWorker = function addWorker(w) {\n    workers[w.id] = w;\n    log(\"[\".concat(id, \"]: Add \").concat(w.id));\n    log(\"[\".concat(id, \"]: Number of workers=\").concat(getNumWorkers()));\n    dequeue();\n    return w.id;\n  };\n  var addJob = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(action) {\n      var _len,\n        payload,\n        _key,\n        _args2 = arguments;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(getNumWorkers() === 0)) {\n              _context2.next = 2;\n              break;\n            }\n            throw Error(\"[\".concat(id, \"]: You need to have at least one worker before adding jobs\"));\n          case 2:\n            for (_len = _args2.length, payload = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              payload[_key - 1] = _args2[_key];\n            }\n            return _context2.abrupt(\"return\", queue(action, payload));\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function addJob(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var terminate = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            Object.keys(workers).forEach( /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(wid) {\n                return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                  while (1) switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return workers[wid].terminate();\n                    case 2:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }, _callee3);\n              }));\n              return function (_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n            jobQueue = [];\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return function terminate() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return {\n    addWorker: addWorker,\n    addJob: addJob,\n    terminate: terminate,\n    getQueueLen: getQueueLen,\n    getNumWorkers: getNumWorkers\n  };\n};","map":{"version":3,"names":["createJob","require","log","getId","schedulerCounter","module","exports","id","workers","runningWorkers","jobQueue","getQueueLen","length","getNumWorkers","Object","keys","dequeue","wIds","i","queue","action","payload","Promise","resolve","reject","job","push","w","shift","apply","addWorker","addJob","Error","terminate","forEach","wid"],"sources":["/Users/bradwilliams/Builds/EatSafely/client/node_modules/tesseract.js/src/createScheduler.js"],"sourcesContent":["const createJob = require('./createJob');\nconst { log } = require('./utils/log');\nconst getId = require('./utils/getId');\n\nlet schedulerCounter = 0;\n\nmodule.exports = () => {\n  const id = getId('Scheduler', schedulerCounter);\n  const workers = {};\n  const runningWorkers = {};\n  let jobQueue = [];\n\n  schedulerCounter += 1;\n\n  const getQueueLen = () => jobQueue.length;\n  const getNumWorkers = () => Object.keys(workers).length;\n\n  const dequeue = () => {\n    if (jobQueue.length !== 0) {\n      const wIds = Object.keys(workers);\n      for (let i = 0; i < wIds.length; i += 1) {\n        if (typeof runningWorkers[wIds[i]] === 'undefined') {\n          jobQueue[0](workers[wIds[i]]);\n          break;\n        }\n      }\n    }\n  };\n\n  const queue = (action, payload) => (\n    new Promise((resolve, reject) => {\n      const job = createJob({ action, payload });\n      jobQueue.push(async (w) => {\n        jobQueue.shift();\n        runningWorkers[w.id] = job;\n        try {\n          resolve(await w[action].apply(this, [...payload, job.id]));\n        } catch (err) {\n          reject(err);\n        } finally {\n          delete runningWorkers[w.id];\n          dequeue();\n        }\n      });\n      log(`[${id}]: Add ${job.id} to JobQueue`);\n      log(`[${id}]: JobQueue length=${jobQueue.length}`);\n      dequeue();\n    })\n  );\n\n  const addWorker = (w) => {\n    workers[w.id] = w;\n    log(`[${id}]: Add ${w.id}`);\n    log(`[${id}]: Number of workers=${getNumWorkers()}`);\n    dequeue();\n    return w.id;\n  };\n\n  const addJob = async (action, ...payload) => {\n    if (getNumWorkers() === 0) {\n      throw Error(`[${id}]: You need to have at least one worker before adding jobs`);\n    }\n    return queue(action, payload);\n  };\n\n  const terminate = async () => {\n    Object.keys(workers).forEach(async (wid) => {\n      await workers[wid].terminate();\n    });\n    jobQueue = [];\n  };\n\n  return {\n    addWorker,\n    addJob,\n    terminate,\n    getQueueLen,\n    getNumWorkers,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
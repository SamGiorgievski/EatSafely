{"ast":null,"code":"var _jsxFileName = \"/Users/bradwilliams/EatSafely/client/src/pages/scan_result.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./scan_result.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ScanResult(_ref) {\n  _s();\n  let {\n    ocrState,\n    confidence,\n    intolerances,\n    backButton,\n    progress,\n    loading\n  } = _ref;\n  const [matches, setMatches] = useState([]);\n  const navigate = useNavigate();\n  function highlightText(intolerances, str) {\n    console.log(intolerances);\n    if (!intolerances) {\n      console.log(\"Hello :)\");\n      return navigate(\"/login\");\n    }\n\n    // take out punctuation\n    let newStr = \"\";\n    const validChars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ \";\n    // /[A-Z]\\i/\n\n    for (let i = 0; i < str.length; i++) {\n      let char = str[i];\n      if (validChars.indexOf(char) !== -1) {\n        newStr += char;\n      }\n    }\n\n    // format inputs\n    const matches = [];\n    let intoleranceLowerCase = intolerances.toLowerCase();\n    let intoleranceArray = intoleranceLowerCase.split(\", \");\n    let newStrLowerCase = newStr.toLowerCase();\n    let strArray = newStrLowerCase.split(\" \");\n    let lowercaseOcrState = ocrState.array.map(index => {\n      return index.toLowerCase();\n    });\n    // console.log(`ocrState.array: ${ocrState.array}`)\n    // console.log(`str: ${str}`)\n    // console.log(`newStr: ${newStr}`)\n    // console.log(`newStrLowerCase: ${newStrLowerCase}`)\n    // console.log(`strArray: ${strArray}`)\n    // // str.includes(combination)\n    // console.log(`lowercaseOcrState: ${lowercaseOcrState}`)\n\n    // find matches\n    for (let i = 0; i < intoleranceArray.length; i++) {\n      for (let j = 0; j < strArray.length; j++) {\n        if (intoleranceArray[i] === strArray[j]) {\n          matches.push(intoleranceArray[i]);\n          break;\n        }\n      }\n    }\n\n    // function to see if a word contains any word in an array\n    function includesAny(str, arr) {\n      return arr.some(function (word) {\n        return str.includes(word);\n      });\n    }\n\n    // highlight text\n    const highlighterReturn = [];\n    let key = 0;\n    for (let j = 0; j < strArray.length; j++) {\n      key += 1;\n      if (includesAny(lowercaseOcrState[j], matches)) {\n        let formattedMatchString = \"\";\n        for (let i = 0; i < matches.length; i++) {\n          if (lowercaseOcrState[j].includes(matches[i])) {\n            formattedMatchString = matches[i];\n          }\n        }\n        highlighterReturn.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: `${formattedMatchString.toUpperCase()}`\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this));\n\n        // Check if bracket is at end of the word, then push \", \" or \"), \" so they're not highlighted\n        key += 1;\n        if (lowercaseOcrState[j].charAt(lowercaseOcrState[j].length - 2) === \")\") {\n          highlighterReturn.push( /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"), \"\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 34\n          }, this));\n        } else {\n          highlighterReturn.push( /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \", \"\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 34\n          }, this));\n        }\n      } else {\n        highlighterReturn.push(`${ocrState.array[j]} `);\n      }\n    }\n    if (matches[0] && !loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result_matches\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result_matches_warning\",\n          children: \"Results: Warning, this product contains harmful ingredients!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result_matches_text\",\n          children: highlighterReturn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this);\n    } else if (!matches[0] && !loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result_nomatches\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result_nomatches_warning\",\n          children: \"Results: This product is safe for consumption!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result_nomatches_text\",\n          children: ocrState.array.join(\" \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"results\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-box\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"results_main\",\n        id: \"inner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_with_highlight\",\n          children: highlightText(intolerances, ocrState.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), matches && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: backButton,\n        children: \"Scan again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(ScanResult, \"PClh80V4Rfps2cTRP3A2BvZ2dOc=\", false, function () {\n  return [useNavigate];\n});\n_c = ScanResult;\nvar _c;\n$RefreshReg$(_c, \"ScanResult\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ScanResult","ocrState","confidence","intolerances","backButton","progress","loading","matches","setMatches","navigate","highlightText","str","console","log","newStr","validChars","i","length","char","indexOf","intoleranceLowerCase","toLowerCase","intoleranceArray","split","newStrLowerCase","strArray","lowercaseOcrState","array","map","index","j","push","includesAny","arr","some","word","includes","highlighterReturn","key","formattedMatchString","toUpperCase","charAt","join","text"],"sources":["/Users/bradwilliams/EatSafely/client/src/pages/scan_result.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./scan_result.scss\";\n\nexport default function ScanResult({\n  ocrState,\n  confidence,\n  intolerances,\n  backButton,\n  progress,\n  loading,\n}) {\n  const [matches, setMatches] = useState([]);\n  const navigate = useNavigate();\n\n  function highlightText(intolerances, str) {\n    console.log(intolerances);\n    if (!intolerances) {\n      console.log(\"Hello :)\");\n      return navigate(\"/login\");\n    }\n\n    // take out punctuation\n    let newStr = \"\";\n    const validChars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ \";\n    // /[A-Z]\\i/\n\n    for (let i = 0; i < str.length; i++) {\n      let char = str[i];\n      if (validChars.indexOf(char) !== -1) {\n        newStr += char;\n      }\n    }\n\n    // format inputs\n    const matches = [];\n    let intoleranceLowerCase = intolerances.toLowerCase();\n    let intoleranceArray = intoleranceLowerCase.split(\", \");\n    let newStrLowerCase = newStr.toLowerCase();\n    let strArray = newStrLowerCase.split(\" \");\n    let lowercaseOcrState = ocrState.array.map((index) => {\n      return index.toLowerCase();\n    });\n    // console.log(`ocrState.array: ${ocrState.array}`)\n    // console.log(`str: ${str}`)\n    // console.log(`newStr: ${newStr}`)\n    // console.log(`newStrLowerCase: ${newStrLowerCase}`)\n    // console.log(`strArray: ${strArray}`)\n    // // str.includes(combination)\n    // console.log(`lowercaseOcrState: ${lowercaseOcrState}`)\n\n    // find matches\n    for (let i = 0; i < intoleranceArray.length; i++) {\n      for (let j = 0; j < strArray.length; j++) {\n        if (intoleranceArray[i] === strArray[j]) {\n          matches.push(intoleranceArray[i]);\n          break;\n        }\n      }\n    }\n\n    // function to see if a word contains any word in an array\n    function includesAny(str, arr) {\n      return arr.some(function (word) {\n        return str.includes(word);\n      });\n    }\n\n    // highlight text\n    const highlighterReturn = [];\n    let key = 0;\n    for (let j = 0; j < strArray.length; j++) {\n      key += 1;\n      if (includesAny(lowercaseOcrState[j], matches)) {\n        let formattedMatchString = \"\";\n\n        for (let i = 0; i < matches.length; i++) {\n          if (lowercaseOcrState[j].includes(matches[i])) {\n            formattedMatchString = matches[i];\n          }\n        }\n\n        highlighterReturn.push(\n          <span className=\"highlight\" key={key}>\n            {`${formattedMatchString.toUpperCase()}`}\n          </span>\n        );\n\n        // Check if bracket is at end of the word, then push \", \" or \"), \" so they're not highlighted\n        key += 1;\n        if (\n          lowercaseOcrState[j].charAt(lowercaseOcrState[j].length - 2) === \")\"\n        ) {\n          highlighterReturn.push(<span key={key}>), </span>);\n        } else {\n          highlighterReturn.push(<span key={key}>, </span>);\n        }\n      } else {\n        highlighterReturn.push(`${ocrState.array[j]} `);\n      }\n    }\n\n    if (matches[0] && !loading) {\n      return (\n        <div className=\"result_matches\">\n          <div className=\"result_matches_warning\">\n            Results: Warning, this product contains harmful ingredients!\n          </div>\n          <div className=\"result_matches_text\">{highlighterReturn}</div>\n        </div>\n      );\n    } else if (!matches[0] && !loading) {\n      return (\n        <div className=\"result_nomatches\">\n          <div className=\"result_nomatches_warning\">\n            Results: This product is safe for consumption!\n          </div>\n          <div className=\"result_nomatches_text\">\n            {ocrState.array.join(\" \")}\n          </div>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <main className=\"results\">\n      <div className=\"text-box\">\n        <span className=\"results_main\" id=\"inner\">\n          {/* {ocrState.text && <span> Results: {ocrState.text}</span>} */}\n          {/* {confidence > 55 && <span>High confidence : {confidence}%</span>} */}\n          <div className=\"text_with_highlight\">\n            {highlightText(intolerances, ocrState.text)}\n          </div>\n        </span>\n      </div>\n\n      {/* Scan new */}\n\n      {matches && (\n        <div className=\"navigation\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={backButton}\n          >\n            Scan again\n          </button>\n        </div>\n      )}\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
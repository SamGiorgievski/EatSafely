{"ast":null,"code":"var _jsxFileName = \"/Users/bradwilliams/EatSafely/client/src/pages/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport EditProfile from \"../componetns/EditProfile\";\nimport axios from \"axios\";\nimport \"./Profile.scss\";\nimport { useGlobalContext } from \"../context\";\n\n//Function that if the sting passed is greater than nth number of char, hides the remaining after 150 and adds ...\n// function truncate(string, n) {\n//   return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = _ref => {\n  _s();\n  let {\n    getIntolerances\n  } = _ref;\n  const [showModal, setShowModal] = useState(false);\n  const [intolerances, setIntolerances] = useState([]);\n  const {\n    isLoggedIn,\n    setIsLoggedIn\n  } = useGlobalContext();\n  const [storedData, setStoredData] = useState(JSON.parse(sessionStorage.getItem(\"userData\")));\n  async function checkIngredients(ingredients) {\n    try {\n      const response = await axios.get(\"https://api.spoonacular.com/recipes/complexSearch\", {\n        params: {\n          apiKey: \"596c8cbb08394a8482c1a10627c3d85d\",\n          query: ingredients.join(\",\"),\n          diet: \"gluten-free\"\n        }\n      });\n      if (response.data.results.length === 0) {\n        console.log(response.data.results);\n        console.log(\"Ingredients are not safe for a gluten-free diet\");\n      } else {\n        console.log(\"Ingredients are safe for a gluten-free diet\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  const ingredients = [\"Almond base (filtered water, almonds)\", \"Filtered water\", \"Cane sugar\", \"Chicory root extract\", \"Pectin\", \"Natural flavour\", \"Tricalcium phosphate\", \"Tripotassium phosphate\", \"Trisodium phosphate\", \"Active bacterial cultures\", \"Gitric acid\", \"Vanilla bean\", \"Sodium citrate\"];\n  checkIngredients(ingredients);\n  useEffect(() => {\n    setStoredData(JSON.parse(sessionStorage.getItem(\"userData\")));\n  }, []);\n  useEffect(() => {\n    getIntolerances(intolerances);\n  }, [intolerances]);\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  axios.post(\"/intolerances\", {\n    sessionData: storedData.data.user.id\n  }).then(res => {\n    setIntolerances(res.data.rows[0].intolerance);\n    // getIntolerances(res.data.rows[0].intolerance);\n  }).catch(err => console.error(err.response.data));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img-top\",\n        src: \"https://t3.ftcdn.net/jpg/02/94/69/02/360_F_294690239_ydek2JMXB9aeQcYY05jVewc0xocZrCNg.jpg\",\n        alt: \"veg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"h2 text-black mb-0 user--name\",\n          children: `${storedData.data.user.first_name} ${storedData.data.user.last_name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"First Name: \", storedData.data.user.first_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Last Name: \", storedData.data.user.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Email: \", storedData.data.user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Intolerances: \", intolerances]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleModal,\n            className: \"btn btn-primary\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), showModal && /*#__PURE__*/_jsxDEV(EditProfile, {\n          toggle: toggleModal,\n          state: (showModal, setShowModal),\n          storedData: storedData,\n          setIntolerances: setIntolerances\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"GeEYD1dfhCerR5Bzq9yuOk6fQAk=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","EditProfile","axios","useGlobalContext","Profile","getIntolerances","showModal","setShowModal","intolerances","setIntolerances","isLoggedIn","setIsLoggedIn","storedData","setStoredData","JSON","parse","sessionStorage","getItem","checkIngredients","ingredients","response","get","params","apiKey","query","join","diet","data","results","length","console","log","error","toggleModal","post","sessionData","user","id","then","res","rows","intolerance","catch","err","first_name","last_name","email"],"sources":["/Users/bradwilliams/EatSafely/client/src/pages/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport EditProfile from \"../componetns/EditProfile\";\nimport axios from \"axios\";\nimport \"./Profile.scss\";\nimport { useGlobalContext } from \"../context\";\n\n//Function that if the sting passed is greater than nth number of char, hides the remaining after 150 and adds ...\n// function truncate(string, n) {\n//   return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\n\nconst Profile = ({ getIntolerances }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [intolerances, setIntolerances] = useState([]);\n  const { isLoggedIn, setIsLoggedIn } = useGlobalContext();\n  const [storedData, setStoredData] = useState(\n    JSON.parse(sessionStorage.getItem(\"userData\"))\n  );\n\n  async function checkIngredients(ingredients) {\n    try {\n      const response = await axios.get(\n        \"https://api.spoonacular.com/recipes/complexSearch\",\n        {\n          params: {\n            apiKey: \"596c8cbb08394a8482c1a10627c3d85d\",\n            query: ingredients.join(\",\"),\n            diet: \"gluten-free\",\n          },\n        }\n      );\n\n      if (response.data.results.length === 0) {\n        console.log(response.data.results);\n        console.log(\"Ingredients are not safe for a gluten-free diet\");\n      } else {\n        console.log(\"Ingredients are safe for a gluten-free diet\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const ingredients = [\n    \"Almond base (filtered water, almonds)\",\n    \"Filtered water\",\n    \"Cane sugar\",\n    \"Chicory root extract\",\n    \"Pectin\",\n    \"Natural flavour\",\n    \"Tricalcium phosphate\",\n    \"Tripotassium phosphate\",\n    \"Trisodium phosphate\",\n    \"Active bacterial cultures\",\n    \"Gitric acid\",\n    \"Vanilla bean\",\n    \"Sodium citrate\",\n  ];\n\n  checkIngredients(ingredients);\n\n  useEffect(() => {\n    setStoredData(JSON.parse(sessionStorage.getItem(\"userData\")));\n  }, []);\n\n  useEffect(() => {\n    getIntolerances(intolerances);\n  }, [intolerances]);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  axios\n    .post(\"/intolerances\", {\n      sessionData: storedData.data.user.id,\n    })\n    .then((res) => {\n      setIntolerances(res.data.rows[0].intolerance);\n      // getIntolerances(res.data.rows[0].intolerance);\n    })\n    .catch((err) => console.error(err.response.data));\n\n  return (\n    <section>\n      <div className=\"card\">\n        <img\n          className=\"card-img-top\"\n          src=\"https://t3.ftcdn.net/jpg/02/94/69/02/360_F_294690239_ydek2JMXB9aeQcYY05jVewc0xocZrCNg.jpg\"\n          alt=\"veg\"\n        />\n        <div className=\"card-body\">\n          <h3 className=\"h2 text-black mb-0 user--name\">{`${storedData.data.user.first_name} ${storedData.data.user.last_name}`}</h3>\n        </div>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            First Name: {storedData.data.user.first_name}\n          </li>\n          <li className=\"list-group-item\">\n            Last Name: {storedData.data.user.last_name}\n          </li>\n          <li className=\"list-group-item\">\n            Email: {storedData.data.user.email}\n          </li>\n          <li className=\"list-group-item\">Intolerances: {intolerances}</li>\n        </ul>\n        <div className=\"card-body\">\n          <div>\n            <button onClick={toggleModal} className=\"btn btn-primary\">\n              Edit\n            </button>\n          </div>\n\n          {showModal && (\n            <EditProfile\n              toggle={toggleModal}\n              state={(showModal, setShowModal)}\n              storedData={storedData}\n              setIntolerances={setIntolerances}\n            />\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
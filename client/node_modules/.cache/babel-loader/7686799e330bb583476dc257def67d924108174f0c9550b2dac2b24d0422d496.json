{"ast":null,"code":"var _jsxFileName = \"/Users/bradwilliams/EatSafely/client/src/pages/scan_result.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./scan_result.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ScanResult(_ref) {\n  _s();\n  let {\n    ocrState,\n    confidence,\n    intolerances,\n    backButton\n  } = _ref;\n  const [matches, setMatches] = useState([]);\n\n  // useEffect(() => {\n  //   findMatches(intolerances, ocrState.text)\n  // }, [findMatches]);\n\n  function findMatches(intolerances, str) {\n    let matches = [];\n    let newStr = \"\";\n    let validChars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\n    let intoleranceArray = intolerances.split(\", \");\n    for (let i = 0; i < str.length; i++) {\n      let char = str[i];\n      if (validChars.indexOf(char) !== -1) {\n        newStr += char;\n      }\n    }\n    let strArray = newStr.split(\" \");\n    // console.log(`find matches: newStr ${newStr}`);\n    // console.log(`find matches: strArray ${strArray}`);\n    // console.log(`find matches: strArray ${typeof strArray}`);\n    // console.log(`find matches: intolerances - ${intoleranceArray}`)\n    // console.log(`find matches: intolerances - ${typeof intoleranceArray}`)\n\n    for (let i = 0; i < intoleranceArray.length; i++) {\n      for (let j = 0; j < strArray.length; j++) {\n        if (intoleranceArray[i] === strArray[j]) {\n          matches.push(intoleranceArray[i]);\n          break;\n        }\n      }\n    }\n    setMatches(matches);\n    return matches;\n  }\n  function highlightText(intolerances, str) {\n    let matches = [];\n    let newStr = \"\";\n    let validChars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ \";\n    let intoleranceArray = intolerances.split(\", \");\n    for (let i = 0; i < str.length; i++) {\n      let char = str[i];\n      if (validChars.indexOf(char) !== -1) {\n        newStr += char;\n      }\n    }\n    let strArray = newStr.split(\" \");\n    for (let i = 0; i < intoleranceArray.length; i++) {\n      for (let j = 0; j < strArray.length; j++) {\n        if (intoleranceArray[i] === strArray[j]) {\n          matches.push(intoleranceArray[i]);\n          break;\n        }\n      }\n    }\n    let highlighterReturn = [];\n    let key = 0;\n    for (let i = 0; i < matches.length; i++) {\n      for (let j = 0; j < strArray.length; j++) {\n        key += 1;\n        if (matches[i] === strArray[j]) {\n          highlighterReturn.push( /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"highlight\",\n            children: [\" \", strArray[j], \" \"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 34\n          }, this));\n        } else {\n          highlighterReturn.push( /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", strArray[j], \" \"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 34\n          }, this));\n        }\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: highlighterReturn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"results\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-box\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"results\",\n        id: \"inner\",\n        children: [confidence > 55 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"High confidence : \", confidence, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_with_highlight\",\n          children: highlightText(intolerances, ocrState.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"matches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), matches && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: () => backButton(),\n        children: \"retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(ScanResult, \"H7CN6PnC2QKypjq3STAazSKETZ4=\");\n_c = ScanResult;\nvar _c;\n$RefreshReg$(_c, \"ScanResult\");","map":{"version":3,"names":["useState","useEffect","ScanResult","ocrState","confidence","intolerances","backButton","matches","setMatches","findMatches","str","newStr","validChars","intoleranceArray","split","i","length","char","indexOf","strArray","j","push","highlightText","highlighterReturn","key","text"],"sources":["/Users/bradwilliams/EatSafely/client/src/pages/scan_result.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./scan_result.scss\";\n\nexport default function ScanResult({ocrState, confidence, intolerances, backButton}) {\n\n  const [matches, setMatches] = useState([]);\n\n  // useEffect(() => {\n  //   findMatches(intolerances, ocrState.text)\n  // }, [findMatches]);\n\n  function findMatches(intolerances, str) {\n    let matches = [];\n    let newStr = \"\";\n    let validChars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\n    let intoleranceArray = intolerances.split(\", \");\n    \n    for (let i = 0; i < str.length; i++) {\n      let char = str[i];\n      if (validChars.indexOf(char) !== -1) {\n        newStr += char;\n      }\n    }\n\n    let strArray = newStr.split(\" \");\n    // console.log(`find matches: newStr ${newStr}`);\n    // console.log(`find matches: strArray ${strArray}`);\n    // console.log(`find matches: strArray ${typeof strArray}`);\n    // console.log(`find matches: intolerances - ${intoleranceArray}`)\n    // console.log(`find matches: intolerances - ${typeof intoleranceArray}`)\n    \n    for (let i = 0; i < intoleranceArray.length; i++) {\n      for (let j = 0; j < strArray.length; j++) {\n        if (intoleranceArray[i] === strArray[j]) {\n          matches.push(intoleranceArray[i]);\n          break;\n        }\n      }\n    }\n\n    setMatches(matches);\n    return matches;\n  }\n\n  function highlightText (intolerances, str) {\n    let matches = [];\n    let newStr = \"\";\n    let validChars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ \";\n    let intoleranceArray = intolerances.split(\", \");\n    \n    for (let i = 0; i < str.length; i++) {\n      let char = str[i];\n      if (validChars.indexOf(char) !== -1) {\n        newStr += char;\n      }\n    }\n\n    let strArray = newStr.split(\" \");\n    \n    for (let i = 0; i < intoleranceArray.length; i++) {\n      for (let j = 0; j < strArray.length; j++) {\n        if (intoleranceArray[i] === strArray[j]) {\n          matches.push(intoleranceArray[i]);\n          break;\n        }\n      }\n    }\n\n    let highlighterReturn = [];\n    let key = 0;\n    for (let i = 0; i < matches.length; i++) {\n      for (let j = 0; j < strArray.length; j++) {\n        key += 1;\n        if (matches[i] === strArray[j]) {\n          highlighterReturn.push(<span className=\"highlight\" key={key}> {strArray[j]} </span>);\n        } else {\n          highlighterReturn.push(<span key={key}> {strArray[j]} </span>)\n        }\n      }\n    }\n\n    return (\n      <div>\n        {highlighterReturn}\n      </div>);\n\n  }\n\n\n  return (\n    <main className=\"results\">\n      <div className=\"text-box\">\n        <span className=\"results\" id=\"inner\">\n          {/* {ocrState.text && <span> Results: {ocrState.text}</span>} */}\n          {confidence > 55 && <span>High confidence : {confidence}%</span>}\n          <div className=\"text_with_highlight\">\n            {highlightText(intolerances, ocrState.text)}\n          </div>\n          <div className=\"matches\">\n            {/* {intolerances && <span> Matches: {findMatches(intolerances, ocrState.text)}</span>} */}\n          </div>\n        </span>\n      </div>\n\n      {/* Scan new */}\n\n      {matches && \n      <div className=\"navigation\">\n      <button type=\"button\" className=\"btn btn-primary\" onClick={() => backButton()}>\n        retry\n      </button>\n    </div>}\n\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
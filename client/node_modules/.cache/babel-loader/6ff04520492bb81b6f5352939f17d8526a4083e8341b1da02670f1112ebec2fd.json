{"ast":null,"code":"const isBrowser = require('./getEnvironment')('type') === 'browser';\nconst resolveURL = isBrowser ? require('resolve-url') : s => s; // eslint-disable-line\n\nmodule.exports = options => {\n  const opts = {\n    ...options\n  };\n  ['corePath', 'workerPath', 'langPath'].forEach(key => {\n    if (options[key]) {\n      opts[key] = resolveURL(opts[key]);\n    }\n  });\n  return opts;\n};","map":{"version":3,"names":["isBrowser","require","resolveURL","s","module","exports","options","opts","forEach","key"],"sources":["/Users/bradwilliams/EatSafely/node_modules/tesseract.js/src/utils/resolvePaths.js"],"sourcesContent":["const isBrowser = require('./getEnvironment')('type') === 'browser';\nconst resolveURL = isBrowser ? require('resolve-url') : s => s; // eslint-disable-line\n\nmodule.exports = (options) => {\n  const opts = { ...options };\n  ['corePath', 'workerPath', 'langPath'].forEach((key) => {\n    if (options[key]) {\n      opts[key] = resolveURL(opts[key]);\n    }\n  });\n  return opts;\n};\n"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,KAAK,SAAS;AACnE,MAAMC,UAAU,GAAGF,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC,GAAGE,CAAC,IAAIA,CAAC,CAAC,CAAC;;AAEhEC,MAAM,CAACC,OAAO,GAAIC,OAAO,IAAK;EAC5B,MAAMC,IAAI,GAAG;IAAE,GAAGD;EAAQ,CAAC;EAC3B,CAAC,UAAU,EAAE,YAAY,EAAE,UAAU,CAAC,CAACE,OAAO,CAAEC,GAAG,IAAK;IACtD,IAAIH,OAAO,CAACG,GAAG,CAAC,EAAE;MAChBF,IAAI,CAACE,GAAG,CAAC,GAAGP,UAAU,CAACK,IAAI,CAACE,GAAG,CAAC,CAAC;IACnC;EACF,CAAC,CAAC;EACF,OAAOF,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
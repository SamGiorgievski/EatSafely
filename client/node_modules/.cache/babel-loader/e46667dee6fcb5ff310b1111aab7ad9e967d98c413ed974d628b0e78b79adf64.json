{"ast":null,"code":"var _jsxFileName = \"/Users/bradwilliams/EatSafely/client/src/pages/ScanImage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport ScanFirst from \"./scan_first\";\nimport ScanResult from \"./scan_result\";\nimport ScanLoading from \"./scan_loading\";\nimport EditProfile from \"../componetns/EditProfile\";\nimport \"./ScanImage.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tesseract = require(\"tesseract.js\");\nfunction ScanImage(_ref) {\n  _s();\n  let {\n    intolerances,\n    setIntolerances,\n    showModal,\n    setShowModal,\n    toggleModal\n  } = _ref;\n  const {\n    storedData,\n    setStoredData\n  } = useGlobalContext();\n\n  // Page state\n  const [scanState, setscanState] = useState({\n    page: \"first\",\n    loading: false\n  });\n  // Ocr data states\n  const [ocrState, setOcrState] = useState({\n    text: \"\",\n    array: []\n  });\n  // Loading states\n  const [loading, isLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [confidence, setConfidence] = useState();\n  const [imagePath, setImagePath] = useState(\"\");\n\n  // Upload file event handler\n  const handleChange = event => {\n    setImagePath(URL.createObjectURL(event.target.files[0]));\n  };\n\n  // UseEffect for testing\n  useEffect(() => {\n    console.log(scanState);\n    // searchText([\"Wheat\", \"cake\"], intolerances);\n    console.log(ocrState.text);\n  }, [scanState, ocrState.text]);\n\n  // Scan image onClick event handler\n  const handleClick = () => {\n    if (!imagePath) {\n      return;\n    }\n    isLoading(true);\n    // Change page state to loading\n    setscanState(prev => ({\n      ...prev,\n      loading: true\n    }));\n\n    // Start tesseract OCR\n    Tesseract.recognize(imagePath, \"eng\", {\n      logger: m => {\n        setProgress(m.progress);\n      }\n    }).catch(err => {\n      console.error(err);\n    }).then(result => {\n      console.log(result);\n      isLoading(false);\n\n      // Get Confidence score\n      let confidenceResult = result.data.confidence;\n      setConfidence(confidenceResult);\n      let text = result.data.text;\n      if (confidenceResult < 50) {\n        console.log(\"HELPPPPP\");\n        return setOcrState(prev => ({\n          ...prev,\n          img: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://www.gran-turismo.com/gtsport/decal/5845681194092494864_1.png\",\n            alt: \"warning\",\n            className: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }));\n      } else {\n        setOcrState(prev => ({\n          ...prev,\n          text,\n          array: confidentTextArray(result),\n          img: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://www.gran-turismo.com/gtsport/decal/5845681194092494864_1.png\",\n            alt: \"warning\",\n            className: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }));\n      }\n    });\n\n    // Change scanState to view results\n    setscanState(prev => ({\n      ...prev,\n      page: \"result\",\n      loading: false\n    }));\n  };\n\n  // returns array of text where each word is above a % of confidence\n  function confidentTextArray(result) {\n    const returnArray = [];\n    const wordArray = result.data.words;\n    wordArray.forEach(word => {\n      if (word.confidence >= 50) {\n        returnArray.push(word.text);\n      }\n    });\n    return returnArray;\n  }\n\n  // Back/retry button\n\n  function backButton() {\n    setscanState(prev => ({\n      ...prev,\n      page: \"first\"\n    }));\n    setOcrState(prev => ({\n      ...prev,\n      text: \"\",\n      array: []\n    }));\n    setImagePath(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scan_card\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"ocr\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"instructions\",\n        children: \"Please upload an image to scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [imagePath && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePath,\n          alt: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), !imagePath && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://via.placeholder.com/300/808080.png/fff?text=Upload+image+to+begin\",\n          alt: \"scanned_image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), \"Loading \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), scanState.page === \"first\" && /*#__PURE__*/_jsxDEV(ScanFirst, {\n        intolerances: intolerances,\n        setIntolerances: setIntolerances,\n        setOcrState: setOcrState,\n        handleClick: handleClick,\n        setConfidence: setConfidence,\n        handleChange: handleChange,\n        setImagePath: setImagePath,\n        imagePath: imagePath,\n        toggleModal: toggleModal,\n        storedData: storedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), scanState.page === \"result\" && /*#__PURE__*/_jsxDEV(ScanResult, {\n        intolerances: intolerances,\n        ocrState: ocrState,\n        confidence: confidence,\n        backButton: backButton,\n        progress: progress,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), showModal && /*#__PURE__*/_jsxDEV(EditProfile, {\n        toggle: toggleModal,\n        state: (showModal, setShowModal),\n        storedData: storedData,\n        setIntolerances: setIntolerances\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(ScanImage, \"DOUlsrtPTUAyfEVt5oHPty7eHkM=\", true);\n_c = ScanImage;\nexport default ScanImage;\nvar _c;\n$RefreshReg$(_c, \"ScanImage\");","map":{"version":3,"names":["useState","useEffect","ScanFirst","ScanResult","ScanLoading","EditProfile","Tesseract","require","ScanImage","intolerances","setIntolerances","showModal","setShowModal","toggleModal","storedData","setStoredData","useGlobalContext","scanState","setscanState","page","loading","ocrState","setOcrState","text","array","isLoading","progress","setProgress","confidence","setConfidence","imagePath","setImagePath","handleChange","event","URL","createObjectURL","target","files","console","log","handleClick","prev","recognize","logger","m","catch","err","error","then","result","confidenceResult","data","img","confidentTextArray","returnArray","wordArray","words","forEach","word","push","backButton"],"sources":["/Users/bradwilliams/EatSafely/client/src/pages/ScanImage.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport ScanFirst from \"./scan_first\";\nimport ScanResult from \"./scan_result\";\nimport ScanLoading from \"./scan_loading\";\nimport EditProfile from \"../componetns/EditProfile\";\nimport \"./ScanImage.scss\";\nconst Tesseract = require(\"tesseract.js\");\n\nfunction ScanImage({\n  intolerances,\n  setIntolerances,\n  showModal,\n  setShowModal,\n  toggleModal,\n}) {\n  const { storedData, setStoredData } = useGlobalContext();\n\n  // Page state\n  const [scanState, setscanState] = useState({\n    page: \"first\",\n    loading: false,\n  });\n  // Ocr data states\n  const [ocrState, setOcrState] = useState({\n    text: \"\",\n    array: [],\n  });\n  // Loading states\n  const [loading, isLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [confidence, setConfidence] = useState();\n  const [imagePath, setImagePath] = useState(\"\");\n\n  // Upload file event handler\n  const handleChange = (event) => {\n    setImagePath(URL.createObjectURL(event.target.files[0]));\n  };\n\n  // UseEffect for testing\n  useEffect(() => {\n    console.log(scanState);\n    // searchText([\"Wheat\", \"cake\"], intolerances);\n    console.log(ocrState.text);\n  }, [scanState, ocrState.text]);\n\n  // Scan image onClick event handler\n  const handleClick = () => {\n    if (!imagePath) {\n      return;\n    }\n\n    isLoading(true);\n    // Change page state to loading\n    setscanState((prev) => ({\n      ...prev,\n      loading: true,\n    }));\n\n    // Start tesseract OCR\n    Tesseract.recognize(imagePath, \"eng\", {\n      logger: (m) => {\n        setProgress(m.progress);\n      },\n    })\n      .catch((err) => {\n        console.error(err);\n      })\n      .then((result) => {\n        console.log(result);\n        isLoading(false);\n\n        // Get Confidence score\n        let confidenceResult = result.data.confidence;\n        setConfidence(confidenceResult);\n        let text = result.data.text;\n\n        if (confidenceResult < 50) {\n          console.log(\"HELPPPPP\");\n          return setOcrState((prev) => ({\n            ...prev,\n            img: (\n              <img\n                src=\"https://www.gran-turismo.com/gtsport/decal/5845681194092494864_1.png\"\n                alt=\"warning\"\n                className=\"checkmark\"\n              />\n            ),\n          }));\n        } else {\n          setOcrState((prev) => ({\n            ...prev,\n            text,\n            array: confidentTextArray(result),\n            img: (\n              <img\n                src=\"https://www.gran-turismo.com/gtsport/decal/5845681194092494864_1.png\"\n                alt=\"warning\"\n                className=\"checkmark\"\n              />\n            ),\n          }));\n        }\n      });\n\n    // Change scanState to view results\n    setscanState((prev) => ({\n      ...prev,\n      page: \"result\",\n      loading: false,\n    }));\n  };\n\n  // returns array of text where each word is above a % of confidence\n  function confidentTextArray(result) {\n    const returnArray = [];\n    const wordArray = result.data.words;\n\n    wordArray.forEach((word) => {\n      if (word.confidence >= 50) {\n        returnArray.push(word.text);\n      }\n    });\n\n    return returnArray;\n  }\n\n  // Back/retry button\n\n  function backButton() {\n    setscanState((prev) => ({\n      ...prev,\n      page: \"first\",\n    }));\n\n    setOcrState((prev) => ({\n      ...prev,\n      text: \"\",\n      array: [],\n    }));\n\n    setImagePath(\"\");\n  }\n\n  return (\n    <div className=\"scan_card\">\n      <section className=\"ocr\">\n        <h3 className=\"instructions\">Please upload an image to scan</h3>\n\n        {/* View uploaded image */}\n        <div>\n          {imagePath && <img src={imagePath} alt=\"Upload\" />}\n          {/* https://placeholder.com/ */}\n          {!imagePath && (\n            <img\n              src={\n                \"https://via.placeholder.com/300/808080.png/fff?text=Upload+image+to+begin\"\n              }\n              alt=\"scanned_image\"\n            />\n          )}\n        </div>\n\n        {/* Loading state */}\n        {!loading ? (\n          <div className=\"text-box\"></div>\n        ) : (\n          <label>\n            <br />\n            <br />\n            Loading <br />\n            <progress value={progress}></progress>\n          </label>\n        )}\n\n        {/* Confidence state\n        {confidence < 55 ? (\n          <p>\n            The confidence score of this scan is: {confidence}% <br />\n            Please take a more clear picture to get more confident results...\n          </p>\n        ) : (\n          <p></p>\n        )} */}\n\n        {/* Results rendering */}\n\n        {scanState.page === \"first\" && (\n          <ScanFirst\n            intolerances={intolerances}\n            setIntolerances={setIntolerances}\n            setOcrState={setOcrState}\n            handleClick={handleClick}\n            setConfidence={setConfidence}\n            handleChange={handleChange}\n            setImagePath={setImagePath}\n            imagePath={imagePath}\n            toggleModal={toggleModal}\n            storedData={storedData}\n          ></ScanFirst>\n        )}\n\n        {/* {scanState.loading === true && <Scan_loading progress={progress} loading={loading}></Scan_loading>} */}\n        {scanState.page === \"result\" && (\n          <ScanResult\n            intolerances={intolerances}\n            ocrState={ocrState}\n            confidence={confidence}\n            backButton={backButton}\n            progress={progress}\n            loading={loading}\n          ></ScanResult>\n        )}\n\n        {/* Edit Intolerances */}\n        {showModal && (\n          <EditProfile\n            toggle={toggleModal}\n            state={(showModal, setShowModal)}\n            storedData={storedData}\n            setIntolerances={setIntolerances}\n          />\n        )}\n      </section>\n    </div>\n  );\n}\n\nexport default ScanImage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from\"/Users/bradwilliams/Builds/EatSafely/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/bradwilliams/Builds/EatSafely/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import\"./scan_result.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ScanResult(_ref){var ocrState=_ref.ocrState,confidence=_ref.confidence,intolerances=_ref.intolerances,backButton=_ref.backButton,progress=_ref.progress,loading=_ref.loading;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),matches=_useState2[0],setMatches=_useState2[1];var navigate=useNavigate();function highlightText(intolerances,str){console.log(intolerances);if(!intolerances){console.log(\"Hello :)\");return navigate(\"/login\");}// take out punctuation\nvar newStr=\"\";var validChars=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ \";// /[A-Z]\\i/\nconsole.log(\"str:\".concat(str));for(var i=0;i<str.length;i++){var char=str[i];if(validChars.indexOf(char)!==-1){newStr+=char;}}// format inputs\nvar matches=[];var intoleranceLowerCase=intolerances.toLowerCase();var intoleranceArray=intoleranceLowerCase.split(\", \");var newStrLowerCase=newStr.toLowerCase();var strArray=newStrLowerCase.split(\" \");var ocrStatespread=_objectSpread({},ocrState);var lowercaseOcrState=ocrStatespread.array.map(function(index){return index.toLowerCase();});// console.log(`ocrState.array: ${ocrState.array}`)\n// console.log(`str: ${str}`)\n// console.log(`newStr: ${newStr}`)\n// console.log(`newStrLowerCase: ${newStrLowerCase}`)\n// console.log(`strArray: ${strArray}`)\n// // str.includes(combination)\n// console.log(`lowercaseOcrState: ${lowercaseOcrState}`)\n// find matches\nfor(var _i=0;_i<intoleranceArray.length;_i++){for(var j=0;j<strArray.length;j++){if(intoleranceArray[_i]===strArray[j]){matches.push(intoleranceArray[_i]);break;}}}// function to see if a word contains any word in an array\nfunction includesAny(str,arr){return arr.some(function(word){console.log(\"word: \".concat(word));return str.includes(word);});}// highlight text\nvar highlighterReturn=[];var key=0;for(var _j=0;_j<lowercaseOcrState.length;_j++){key+=1;console.log(\"strArray[j]:\".concat(strArray[_j]));console.log(\"lowercaseOcrState[j]:\".concat(strArray[_j]));if(!lowercaseOcrState[_j]){console.log(\"if undefined: \".concat(lowercaseOcrState[_j]));break;}if(includesAny(lowercaseOcrState[_j],matches)){var formattedMatchString=\"\";for(var _i2=0;_i2<matches.length;_i2++){if(lowercaseOcrState[_j].includes(matches[_i2])){formattedMatchString=matches[_i2];}}highlighterReturn.push(/*#__PURE__*/_jsx(\"span\",{className:\"highlight\",children:\"\".concat(formattedMatchString.toUpperCase())},key));// Check if bracket is at end of the word, then push \", \" or \"), \" so they're not highlighted\nkey+=1;if(lowercaseOcrState[_j].charAt(lowercaseOcrState[_j].length-2)===\")\"){highlighterReturn.push(/*#__PURE__*/_jsx(\"span\",{children:\"), \"},key));}else{highlighterReturn.push(/*#__PURE__*/_jsx(\"span\",{children:\", \"},key));}}else{highlighterReturn.push(\"\".concat(lowercaseOcrState[_j],\" \"));}}if(matches[0]&&!loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"result_matches\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"result_matches_warning\",children:\"Results: Warning, this product contains harmful ingredients!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"result_matches_text\",children:highlighterReturn})]});}else if(!matches[0]&&!loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"result_nomatches\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"result_nomatches_warning\",children:\"Results: This product is safe for consumption!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"result_nomatches_text\",children:ocrState.array.join(\" \")})]});}}return/*#__PURE__*/_jsxs(\"main\",{className:\"results\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-box\",children:/*#__PURE__*/_jsx(\"span\",{className:\"results_main\",id:\"inner\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text_with_highlight\",children:highlightText(intolerances,ocrState.text)})})}),matches&&/*#__PURE__*/_jsx(\"div\",{className:\"navigation\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:backButton,children:\"Scan again\"})})]});}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ScanResult","ocrState","confidence","intolerances","backButton","progress","loading","matches","setMatches","navigate","highlightText","str","console","log","newStr","validChars","i","length","char","indexOf","intoleranceLowerCase","toLowerCase","intoleranceArray","split","newStrLowerCase","strArray","ocrStatespread","lowercaseOcrState","array","map","index","j","push","includesAny","arr","some","word","includes","highlighterReturn","key","formattedMatchString","toUpperCase","charAt","join","text"],"sources":["/Users/bradwilliams/Builds/EatSafely/client/src/pages/scan_result.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./scan_result.scss\";\n\nexport default function ScanResult({\n  ocrState,\n  confidence,\n  intolerances,\n  backButton,\n  progress,\n  loading,\n}) {\n  const [matches, setMatches] = useState([]);\n  const navigate = useNavigate();\n\n\n  function highlightText(intolerances, str) {\n    console.log(intolerances);\n    if (!intolerances) {\n      console.log(\"Hello :)\");\n      return navigate(\"/login\");\n    }\n\n    // take out punctuation\n    let newStr = \"\";\n    const validChars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ \";\n    // /[A-Z]\\i/\n\n  console.log(`str:${str}`)\n\n    for (let i = 0; i < str.length; i++) {\n      let char = str[i];\n      if (validChars.indexOf(char) !== -1) {\n        newStr += char;\n      }\n    }\n\n    // format inputs\n    const matches = [];\n    let intoleranceLowerCase = intolerances.toLowerCase();\n    let intoleranceArray = intoleranceLowerCase.split(\", \");\n    let newStrLowerCase = newStr.toLowerCase();\n    let strArray = newStrLowerCase.split(\" \");\n    let ocrStatespread = {...ocrState};\n    let lowercaseOcrState = ocrStatespread.array.map((index) => {\n      return index.toLowerCase();\n    });\n    // console.log(`ocrState.array: ${ocrState.array}`)\n    // console.log(`str: ${str}`)\n    // console.log(`newStr: ${newStr}`)\n    // console.log(`newStrLowerCase: ${newStrLowerCase}`)\n    // console.log(`strArray: ${strArray}`)\n    // // str.includes(combination)\n    // console.log(`lowercaseOcrState: ${lowercaseOcrState}`)\n\n    // find matches\n    for (let i = 0; i < intoleranceArray.length; i++) {\n      for (let j = 0; j < strArray.length; j++) {\n        if (intoleranceArray[i] === strArray[j]) {\n          matches.push(intoleranceArray[i]);\n          break;\n        }\n      }\n    }\n\n    // function to see if a word contains any word in an array\n    function includesAny(str, arr) {\n\n      return arr.some(function(word) {\n        console.log(`word: ${word}`)\n        return str.includes(word);\n      });\n    }\n\n    // highlight text\n    const highlighterReturn = [];\n    let key = 0;\n      for (let j = 0; j < lowercaseOcrState.length; j++) {\n        key += 1;\n        console.log(`strArray[j]:${strArray[j]}`)\n        console.log(`lowercaseOcrState[j]:${strArray[j]}`)\n\n        if (!lowercaseOcrState[j]) { \n          console.log(`if undefined: ${lowercaseOcrState[j]}`)\n          break;}\n\n        if (includesAny(lowercaseOcrState[j], matches)) {\n\n          let formattedMatchString = \"\";\n\n          for (let i = 0; i < matches.length; i++) {\n            if (lowercaseOcrState[j].includes(matches[i])) {\n              formattedMatchString = matches[i];\n            }\n          }\n            \n            highlighterReturn.push(\n              <span className=\"highlight\" key={key}>\n                {`${formattedMatchString.toUpperCase()}`}\n              </span>\n            );\n\n            // Check if bracket is at end of the word, then push \", \" or \"), \" so they're not highlighted\n            key += 1;\n            if (lowercaseOcrState[j].charAt(lowercaseOcrState[j].length - 2) === \")\") {\n              highlighterReturn.push(<span key={key}>), </span>);\n            } else {\n              highlighterReturn.push(<span key={key}>, </span>);\n            }\n          \n        } else {\n          highlighterReturn.push(`${lowercaseOcrState[j]} `);\n        }\n\n      \n      }\n\n    if (matches[0] && !loading) {\n      return (\n        <div className=\"result_matches\">\n          <div className=\"result_matches_warning\">\n            Results: Warning, this product contains harmful ingredients!\n          </div>\n          <div className=\"result_matches_text\">{highlighterReturn}</div>\n        </div>\n      );\n    } else if (!matches[0] && !loading) {\n      return (\n        <div className=\"result_nomatches\">\n          <div className=\"result_nomatches_warning\">\n            Results: This product is safe for consumption!\n          </div>\n          <div className=\"result_nomatches_text\">\n            {ocrState.array.join(\" \")}\n          </div>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <main className=\"results\">\n      <div className=\"text-box\">\n        <span className=\"results_main\" id=\"inner\">\n          {/* {ocrState.text && <span> Results: {ocrState.text}</span>} */}\n          {/* {confidence > 55 && <span>High confidence : {confidence}%</span>} */}\n          <div className=\"text_with_highlight\">\n            {highlightText(intolerances, ocrState.text)}\n          </div>\n        </span>\n      </div>\n\n      {/* Scan new */}\n\n      {matches && (\n        <div className=\"navigation\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={backButton}\n          >\n            Scan again\n          </button>\n        </div>\n      )}\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
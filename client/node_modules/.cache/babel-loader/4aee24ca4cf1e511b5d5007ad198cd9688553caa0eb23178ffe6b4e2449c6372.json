{"ast":null,"code":"import _slicedToArray from\"/Users/bradwilliams/Builds/EatSafely/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useNavigate}from\"react\";import axios from\"axios\";import\"./EditProfile.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditProfile=function EditProfile(_ref){var toggle=_ref.toggle,setIntolerances=_ref.setIntolerances,storedData=_ref.storedData,setStoredData=_ref.setStoredData;// let [storedData, setStoredData] = useState({});\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),celiacChecked=_useState2[0],setCeliacChecked=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),nutsChecked=_useState4[0],setNutsChecked=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),dairyChecked=_useState6[0],setDairyChecked=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),veganChecked=_useState8[0],setVeganChecked=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),special=_useState10[0],setSpecial=_useState10[1];var handleCeliacCheck=function handleCeliacCheck(event){setCeliacChecked(event.target.checked);};var handleNutCheck=function handleNutCheck(event){setNutsChecked(event.target.checked);};var handleDairyCheck=function handleDairyCheck(event){setDairyChecked(event.target.checked);};var handleVeganCheck=function handleVeganCheck(event){setVeganChecked(event.target.checked);};var handleSpecial=function handleSpecial(event){setSpecial(event.target.value);};var updateUser=function updateUser(event){var intolerancesArr=[];if(celiacChecked){intolerancesArr.push(\"Wheat, Rye, Barley, Malt, Triticale, Semolina\");}if(nutsChecked){intolerancesArr.push(\"Peanut, Cashew, Almond, Pistachio, Macadamia Nut, Walnut, Pecan, Hazelnut, Chestnut, Pine Nut, Praline\");}if(dairyChecked){intolerancesArr.push(\"Milk Sugar, Lactose, Casein, Cheese\");}if(veganChecked){intolerancesArr.push(\"Casein, Lactose, Whey, Collagen, Elastin, Keratin, Gelatine/gelatin, Aspic, Lard/tallow, Shellac, Honey, Propolis, D3, Albumen/albumin, Isinglass, Cod liver oil, Pepsin, Rennet, Chicken, Beef, Pork\");}if(special.length>0){intolerancesArr.push(special);}axios.put(\"/update\",{sessionData:storedData.data.user.id,intolerances:intolerancesArr.join(\", \")}).then(function(res){sessionStorage.setItem(\"userData\",JSON.stringify(res.data));setStoredData(res.data);setIntolerances(res.data.rows[0].intolerance);toggle();}).catch(function(err){return console.error(err.response.data);});setIntolerances(intolerancesArr.join(\", \"));};return/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Edit Intolerances\"})}),/*#__PURE__*/_jsxs(\"form\",{method:\"POST\",action:\"/register\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6 mb-4\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-outline mb-4\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"intolerance--edit\",placeholder:\"Please put any special ingredients here..\",className:\"form-control\",onChange:handleSpecial}),/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",for:\"password\",children:\"Intolerances\"})]}),/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Please select any of the pre-defined list of intolerances or allergies:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-outline mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-check\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",onChange:handleCeliacCheck,value:\"\",id:\"flexCheckDefault\"}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",for:\"flexCheckDefault\",children:\"Celiac Disease - (Wheat, Rye, Barley)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-check\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",value:\"\",onChange:handleNutCheck,id:\"flexCheckDefault\"}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",for:\"flexCheckDefault\",children:\"Nut Allergy - (Peanuts, Cashews, Almonds, Pistachios)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-check\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",onChange:handleVeganCheck,value:\"\",id:\"flexCheckDefault\"}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",for:\"flexCheckDefault\",children:\"Vegan - (Any Animal derived product)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-check\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",value:\"\",onChange:handleDairyCheck,id:\"flexCheckDefault\"}),/*#__PURE__*/_jsx(\"label\",{class:\"form-check-label\",for:\"flexCheckDefault\",children:\"Dairy-Free (Lactose, Milk, Cheese, Yogurt)\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",onClick:function onClick(){toggle();updateUser();},children:\"Save Changes\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggle,className:\"btn btn-primary\",children:\"Close\"})]})]})});};export default EditProfile;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","EditProfile","toggle","setIntolerances","storedData","setStoredData","celiacChecked","setCeliacChecked","nutsChecked","setNutsChecked","dairyChecked","setDairyChecked","veganChecked","setVeganChecked","special","setSpecial","handleCeliacCheck","event","target","checked","handleNutCheck","handleDairyCheck","handleVeganCheck","handleSpecial","value","updateUser","intolerancesArr","push","length","put","sessionData","data","user","id","intolerances","join","then","res","sessionStorage","setItem","JSON","stringify","rows","intolerance","catch","err","console","error","response"],"sources":["/Users/bradwilliams/Builds/EatSafely/client/src/componetns/EditProfile.jsx"],"sourcesContent":["import React, { useState, useEffect, useNavigate } from \"react\";\nimport axios from \"axios\";\nimport \"./EditProfile.scss\";\n\nconst EditProfile = ({\n  toggle,\n  setIntolerances,\n  storedData,\n  setStoredData,\n}) => {\n  // let [storedData, setStoredData] = useState({});\n\n  const [celiacChecked, setCeliacChecked] = useState(false);\n  const [nutsChecked, setNutsChecked] = useState(false);\n  const [dairyChecked, setDairyChecked] = useState(false);\n  const [veganChecked, setVeganChecked] = useState(false);\n  const [special, setSpecial] = useState([]);\n\n  const handleCeliacCheck = (event) => {\n    setCeliacChecked(event.target.checked);\n  };\n  const handleNutCheck = (event) => {\n    setNutsChecked(event.target.checked);\n  };\n  const handleDairyCheck = (event) => {\n    setDairyChecked(event.target.checked);\n  };\n  const handleVeganCheck = (event) => {\n    setVeganChecked(event.target.checked);\n  };\n  const handleSpecial = (event) => {\n    setSpecial(event.target.value);\n  };\n  const updateUser = (event) => {\n    const intolerancesArr = [];\n    if (celiacChecked) {\n      intolerancesArr.push(\"Wheat, Rye, Barley, Malt, Triticale, Semolina\");\n    }\n    if (nutsChecked) {\n      intolerancesArr.push(\n        \"Peanut, Cashew, Almond, Pistachio, Macadamia Nut, Walnut, Pecan, Hazelnut, Chestnut, Pine Nut, Praline\"\n      );\n    }\n    if (dairyChecked) {\n      intolerancesArr.push(\"Milk Sugar, Lactose, Casein, Cheese\");\n    }\n    if (veganChecked) {\n      intolerancesArr.push(\n        \"Casein, Lactose, Whey, Collagen, Elastin, Keratin, Gelatine/gelatin, Aspic, Lard/tallow, Shellac, Honey, Propolis, D3, Albumen/albumin, Isinglass, Cod liver oil, Pepsin, Rennet, Chicken, Beef, Pork\"\n      );\n    }\n    if (special.length > 0) {\n      intolerancesArr.push(special);\n    }\n\n    axios\n      .put(\"/update\", {\n        sessionData: storedData.data.user.id,\n        intolerances: intolerancesArr.join(\", \"),\n      })\n      .then((res) => {\n        sessionStorage.setItem(\"userData\", JSON.stringify(res.data));\n        setStoredData(res.data);\n        setIntolerances(res.data.rows[0].intolerance);\n        toggle();\n      })\n      .catch((err) => console.error(err.response.data));\n\n    setIntolerances(intolerancesArr.join(\", \"));\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h3>Edit Intolerances</h3>\n        </div>\n        <form method=\"POST\" action=\"/register\">\n          <div className=\"row\">\n            <div className=\"col-md-6 mb-4\"></div>\n          </div>\n          {/* Intolerances */}\n          <div className=\"form-outline mb-4\">\n            <input\n              id=\"intolerance--edit\"\n              placeholder=\"Please put any special ingredients here..\"\n              className=\"form-control\"\n              onChange={handleSpecial}\n            />\n            <label className=\"form-label\" for=\"password\">\n              Intolerances\n            </label>\n          </div>\n\n          {/* List of premade intolerances */}\n          <label className=\"form-label\">\n            Please select any of the pre-defined list of intolerances or\n            allergies:\n          </label>\n          <div className=\"form-outline mb-4\">\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                onChange={handleCeliacCheck}\n                value=\"\"\n                id=\"flexCheckDefault\"\n              />\n              <label className=\"form-check-label\" for=\"flexCheckDefault\">\n                Celiac Disease - (Wheat, Rye, Barley)\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                value=\"\"\n                onChange={handleNutCheck}\n                id=\"flexCheckDefault\"\n              />\n              <label className=\"form-check-label\" for=\"flexCheckDefault\">\n                Nut Allergy - (Peanuts, Cashews, Almonds, Pistachios)\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                onChange={handleVeganCheck}\n                value=\"\"\n                id=\"flexCheckDefault\"\n              />\n              <label className=\"form-check-label\" for=\"flexCheckDefault\">\n                Vegan - (Any Animal derived product)\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                value=\"\"\n                onChange={handleDairyCheck}\n                id=\"flexCheckDefault\"\n              />\n              <label class=\"form-check-label\" for=\"flexCheckDefault\">\n                Dairy-Free (Lactose, Milk, Cheese, Yogurt)\n              </label>\n            </div>\n          </div>\n        </form>\n        <div className=\"modal-footer\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={() => {\n              toggle();\n              updateUser();\n            }}\n          >\n            Save Changes\n          </button>\n          <button onClick={toggle} className=\"btn btn-primary\">\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditProfile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
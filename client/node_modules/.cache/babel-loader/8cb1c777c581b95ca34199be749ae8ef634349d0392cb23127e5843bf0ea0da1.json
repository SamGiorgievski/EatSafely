{"ast":null,"code":"const isElectron = require('is-electron');\nmodule.exports = key => {\n  const env = {};\n  if (typeof WorkerGlobalScope !== 'undefined') {\n    env.type = 'webworker';\n  } else if (isElectron()) {\n    env.type = 'electron';\n  } else if (typeof window === 'object') {\n    env.type = 'browser';\n  } else if (typeof process === 'object' && typeof require === 'function') {\n    env.type = 'node';\n  }\n  if (typeof key === 'undefined') {\n    return env;\n  }\n  return env[key];\n};","map":{"version":3,"names":["isElectron","require","module","exports","key","env","WorkerGlobalScope","type","window","process"],"sources":["/Users/bradwilliams/EatSafely/node_modules/tesseract.js/src/utils/getEnvironment.js"],"sourcesContent":["const isElectron = require('is-electron');\n\nmodule.exports = (key) => {\n  const env = {};\n\n  if (typeof WorkerGlobalScope !== 'undefined') {\n    env.type = 'webworker';\n  } else if (isElectron()) {\n    env.type = 'electron';\n  } else if (typeof window === 'object') {\n    env.type = 'browser';\n  } else if (typeof process === 'object' && typeof require === 'function') {\n    env.type = 'node';\n  }\n\n  if (typeof key === 'undefined') {\n    return env;\n  }\n\n  return env[key];\n};\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,aAAa,CAAC;AAEzCC,MAAM,CAACC,OAAO,GAAIC,GAAG,IAAK;EACxB,MAAMC,GAAG,GAAG,CAAC,CAAC;EAEd,IAAI,OAAOC,iBAAiB,KAAK,WAAW,EAAE;IAC5CD,GAAG,CAACE,IAAI,GAAG,WAAW;EACxB,CAAC,MAAM,IAAIP,UAAU,EAAE,EAAE;IACvBK,GAAG,CAACE,IAAI,GAAG,UAAU;EACvB,CAAC,MAAM,IAAI,OAAOC,MAAM,KAAK,QAAQ,EAAE;IACrCH,GAAG,CAACE,IAAI,GAAG,SAAS;EACtB,CAAC,MAAM,IAAI,OAAOE,OAAO,KAAK,QAAQ,IAAI,OAAOR,OAAO,KAAK,UAAU,EAAE;IACvEI,GAAG,CAACE,IAAI,GAAG,MAAM;EACnB;EAEA,IAAI,OAAOH,GAAG,KAAK,WAAW,EAAE;IAC9B,OAAOC,GAAG;EACZ;EAEA,OAAOA,GAAG,CAACD,GAAG,CAAC;AACjB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
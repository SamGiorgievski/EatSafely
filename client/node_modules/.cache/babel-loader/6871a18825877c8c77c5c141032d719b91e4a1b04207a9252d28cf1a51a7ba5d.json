{"ast":null,"code":"var _jsxFileName = \"/Users/bradwilliams/EatSafely/client/src/pages/ScanImage.jsx\";\nimport ScanFirst from \"./scan_first\";\nimport ScanResult from \"./scan_result\";\nimport ScanLoading from \"./scan_loading\";\nimport EditProfile from \"../componetns/EditProfile\";\nimport \"./ScanImage.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tesseract = require(\"tesseract.js\");\nfunction ScanImage(_ref) {\n  let {\n    intolerances,\n    setIntolerances,\n    showModal,\n    setShowModal,\n    toggleModal,\n    storedData\n  } = _ref;\n  // Page state\n  let scanPage = \"first\";\n  let scanLoading = false;\n\n  // Ocr data states\n  let ocrText = \"\";\n  let ocrArray = [];\n\n  // Loading states\n  let loading = false;\n  let progress = 0;\n  let confidence;\n  let imagePath = \"\";\n\n  // Upload file event handler\n  const handleChange = event => {\n    imagePath = URL.createObjectURL(event.target.files[0]);\n  };\n\n  // Scan image onClick event handler\n  const handleClick = () => {\n    loading = true;\n    // Change page state to loading\n    scanLoading = true;\n\n    // Start tesseract OCR\n    Tesseract.recognize(imagePath, \"eng\", {\n      logger: m => {\n        progress = m.progress;\n      }\n    }).catch(err => {\n      console.error(err);\n    }).then(result => {\n      console.log(result);\n      loading = false;\n\n      // Get Confidence score\n      confidence = result.data.confidence;\n      let text = result.data.text;\n      if (confidence < 55) {\n        ocrText = \"\";\n      } else {\n        ocrText = text;\n        ocrArray = confidentTextArray(result);\n      }\n    });\n\n    // Change scanState to view results\n    scanPage = \"result\";\n    scanLoading = false;\n  };\n\n  // returns array of text where each word is above a % of confidence\n  function confidentTextArray(result) {\n    const returnArray = [];\n    const wordArray = result.data.words;\n    wordArray.forEach(word => {\n      if (word.confidence >= 60) {\n        returnArray.push(word.text);\n      }\n    });\n    return returnArray;\n  }\n\n  // Back/retry button\n\n  function backButton() {\n    scanPage = \"first\";\n    ocrText = \"\";\n    ocrArray = [];\n    imagePath = \"\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"layout\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"ocr\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"instructions\",\n        children: \"Please upload an image to scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [imagePath && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePath,\n          alt: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), !imagePath && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://via.placeholder.com/300/808080.png/fff?text=Upload+image+to+begin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), \"Loading \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), scanState.page === \"first\" && /*#__PURE__*/_jsxDEV(ScanFirst, {\n        intolerances: intolerances,\n        setOcrState: setOcrState,\n        handleClick: handleClick,\n        setConfidence: setConfidence,\n        handleChange: handleChange,\n        setImagePath: setImagePath,\n        toggleModal: toggleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), scanState.page === \"result\" && /*#__PURE__*/_jsxDEV(ScanResult, {\n        intolerances: intolerances,\n        ocrState: ocrState,\n        confidence: confidence,\n        backButton: backButton,\n        progress: progress,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), showModal && /*#__PURE__*/_jsxDEV(EditProfile, {\n        toggle: toggleModal,\n        state: (showModal, setShowModal),\n        storedData: storedData,\n        setIntolerances: setIntolerances\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_c = ScanImage;\nexport default ScanImage;\nvar _c;\n$RefreshReg$(_c, \"ScanImage\");","map":{"version":3,"names":["ScanFirst","ScanResult","ScanLoading","EditProfile","Tesseract","require","ScanImage","intolerances","setIntolerances","showModal","setShowModal","toggleModal","storedData","scanPage","scanLoading","ocrText","ocrArray","loading","progress","confidence","imagePath","handleChange","event","URL","createObjectURL","target","files","handleClick","recognize","logger","m","catch","err","console","error","then","result","log","data","text","confidentTextArray","returnArray","wordArray","words","forEach","word","push","backButton","scanState","page","setOcrState","setConfidence","setImagePath","ocrState"],"sources":["/Users/bradwilliams/EatSafely/client/src/pages/ScanImage.jsx"],"sourcesContent":["import ScanFirst from \"./scan_first\";\nimport ScanResult from \"./scan_result\";\nimport ScanLoading from \"./scan_loading\";\nimport EditProfile from \"../componetns/EditProfile\";\nimport \"./ScanImage.scss\";\nconst Tesseract = require(\"tesseract.js\");\n\nfunction ScanImage({\n  intolerances,\n  setIntolerances,\n  showModal,\n  setShowModal,\n  toggleModal,\n  storedData,\n}) {\n  // Page state\n  let scanPage = \"first\";\n  let scanLoading = false;\n\n  // Ocr data states\n  let ocrText = \"\";\n  let ocrArray = [];\n\n  // Loading states\n  let loading = false;\n  let progress = 0;\n  let confidence;\n  let imagePath = \"\";\n\n  // Upload file event handler\n  const handleChange = (event) => {\n    imagePath = URL.createObjectURL(event.target.files[0]);\n  };\n\n  // Scan image onClick event handler\n  const handleClick = () => {\n    loading = true;\n    // Change page state to loading\n    scanLoading = true;\n\n    // Start tesseract OCR\n    Tesseract.recognize(imagePath, \"eng\", {\n      logger: (m) => {\n        progress = m.progress;\n      },\n    })\n      .catch((err) => {\n        console.error(err);\n      })\n      .then((result) => {\n        console.log(result);\n        loading = false;\n\n        // Get Confidence score\n        confidence = result.data.confidence;\n        let text = result.data.text;\n\n        if (confidence < 55) {\n          ocrText = \"\";\n        } else {\n          ocrText = text;\n          ocrArray = confidentTextArray(result);\n        }\n      });\n\n    // Change scanState to view results\n    scanPage = \"result\";\n    scanLoading = false;\n  };\n\n  // returns array of text where each word is above a % of confidence\n  function confidentTextArray(result) {\n    const returnArray = [];\n    const wordArray = result.data.words;\n\n    wordArray.forEach((word) => {\n      if (word.confidence >= 60) {\n        returnArray.push(word.text);\n      }\n    });\n\n    return returnArray;\n  }\n\n  // Back/retry button\n\n  function backButton() {\n    scanPage = \"first\";\n    ocrText = \"\";\n    ocrArray = [];\n    imagePath = \"\";\n  }\n\n  return (\n    <main className=\"layout\">\n      <section className=\"ocr\">\n        <h3 className=\"instructions\">Please upload an image to scan</h3>\n\n        {/* View uploaded image */}\n        <div>\n          {imagePath && <img src={imagePath} alt=\"Upload\" />}\n          {/* https://placeholder.com/ */}\n          {!imagePath && (\n            <img\n              src={\n                \"https://via.placeholder.com/300/808080.png/fff?text=Upload+image+to+begin\"\n              }\n            />\n          )}\n        </div>\n\n        {/* Loading state */}\n        {!loading ? (\n          <div className=\"text-box\"></div>\n        ) : (\n          <label>\n            <br />\n            <br />\n            Loading <br />\n            <progress value={progress}></progress>\n          </label>\n        )}\n\n        {/* Confidence state\n        {confidence < 55 ? (\n          <p>\n            The confidence score of this scan is: {confidence}% <br />\n            Please take a more clear picture to get more confident results...\n          </p>\n        ) : (\n          <p></p>\n        )} */}\n\n        {/* Results rendering */}\n\n        {scanState.page === \"first\" && (\n          <ScanFirst\n            intolerances={intolerances}\n            setOcrState={setOcrState}\n            handleClick={handleClick}\n            setConfidence={setConfidence}\n            handleChange={handleChange}\n            setImagePath={setImagePath}\n            toggleModal={toggleModal}\n          ></ScanFirst>\n        )}\n\n        {/* {scanState.loading === true && <Scan_loading progress={progress} loading={loading}></Scan_loading>} */}\n        {scanState.page === \"result\" && (\n          <ScanResult\n            intolerances={intolerances}\n            ocrState={ocrState}\n            confidence={confidence}\n            backButton={backButton}\n            progress={progress}\n            loading={loading}\n          ></ScanResult>\n        )}\n\n        {/* Edit Intolerances */}\n        {showModal && (\n          <EditProfile\n            toggle={toggleModal}\n            state={(showModal, setShowModal)}\n            storedData={storedData}\n            setIntolerances={setIntolerances}\n          />\n        )}\n      </section>\n    </main>\n  );\n}\n\nexport default ScanImage;\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,cAAc;AACpC,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAO,kBAAkB;AAAC;AAC1B,MAAMC,SAAS,GAAGC,OAAO,CAAC,cAAc,CAAC;AAEzC,SAASC,SAAS,OAOf;EAAA,IAPgB;IACjBC,YAAY;IACZC,eAAe;IACfC,SAAS;IACTC,YAAY;IACZC,WAAW;IACXC;EACF,CAAC;EACC;EACA,IAAIC,QAAQ,GAAG,OAAO;EACtB,IAAIC,WAAW,GAAG,KAAK;;EAEvB;EACA,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,QAAQ,GAAG,EAAE;;EAEjB;EACA,IAAIC,OAAO,GAAG,KAAK;EACnB,IAAIC,QAAQ,GAAG,CAAC;EAChB,IAAIC,UAAU;EACd,IAAIC,SAAS,GAAG,EAAE;;EAElB;EACA,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9BF,SAAS,GAAGG,GAAG,CAACC,eAAe,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxD,CAAC;;EAED;EACA,MAAMC,WAAW,GAAG,MAAM;IACxBV,OAAO,GAAG,IAAI;IACd;IACAH,WAAW,GAAG,IAAI;;IAElB;IACAV,SAAS,CAACwB,SAAS,CAACR,SAAS,EAAE,KAAK,EAAE;MACpCS,MAAM,EAAGC,CAAC,IAAK;QACbZ,QAAQ,GAAGY,CAAC,CAACZ,QAAQ;MACvB;IACF,CAAC,CAAC,CACCa,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB,CAAC,CAAC,CACDG,IAAI,CAAEC,MAAM,IAAK;MAChBH,OAAO,CAACI,GAAG,CAACD,MAAM,CAAC;MACnBnB,OAAO,GAAG,KAAK;;MAEf;MACAE,UAAU,GAAGiB,MAAM,CAACE,IAAI,CAACnB,UAAU;MACnC,IAAIoB,IAAI,GAAGH,MAAM,CAACE,IAAI,CAACC,IAAI;MAE3B,IAAIpB,UAAU,GAAG,EAAE,EAAE;QACnBJ,OAAO,GAAG,EAAE;MACd,CAAC,MAAM;QACLA,OAAO,GAAGwB,IAAI;QACdvB,QAAQ,GAAGwB,kBAAkB,CAACJ,MAAM,CAAC;MACvC;IACF,CAAC,CAAC;;IAEJ;IACAvB,QAAQ,GAAG,QAAQ;IACnBC,WAAW,GAAG,KAAK;EACrB,CAAC;;EAED;EACA,SAAS0B,kBAAkB,CAACJ,MAAM,EAAE;IAClC,MAAMK,WAAW,GAAG,EAAE;IACtB,MAAMC,SAAS,GAAGN,MAAM,CAACE,IAAI,CAACK,KAAK;IAEnCD,SAAS,CAACE,OAAO,CAAEC,IAAI,IAAK;MAC1B,IAAIA,IAAI,CAAC1B,UAAU,IAAI,EAAE,EAAE;QACzBsB,WAAW,CAACK,IAAI,CAACD,IAAI,CAACN,IAAI,CAAC;MAC7B;IACF,CAAC,CAAC;IAEF,OAAOE,WAAW;EACpB;;EAEA;;EAEA,SAASM,UAAU,GAAG;IACpBlC,QAAQ,GAAG,OAAO;IAClBE,OAAO,GAAG,EAAE;IACZC,QAAQ,GAAG,EAAE;IACbI,SAAS,GAAG,EAAE;EAChB;EAEA,oBACE;IAAM,SAAS,EAAC,QAAQ;IAAA,uBACtB;MAAS,SAAS,EAAC,KAAK;MAAA,wBACtB;QAAI,SAAS,EAAC,cAAc;QAAA,UAAC;MAA8B;QAAA;QAAA;QAAA;MAAA,QAAK,eAGhE;QAAA,WACGA,SAAS,iBAAI;UAAK,GAAG,EAAEA,SAAU;UAAC,GAAG,EAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG,EAEjD,CAACA,SAAS,iBACT;UACE,GAAG,EACD;QACD;UAAA;UAAA;UAAA;QAAA,QAEJ;MAAA;QAAA;QAAA;QAAA;MAAA,QACG,EAGL,CAACH,OAAO,gBACP;QAAK,SAAS,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAO,gBAEhC;QAAA,wBACE;UAAA;UAAA;UAAA;QAAA,QAAM,eACN;UAAA;UAAA;UAAA;QAAA,QAAM,YACE;UAAA;UAAA;UAAA;QAAA,QAAM,eACd;UAAU,KAAK,EAAEC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAEzC,EAcA8B,SAAS,CAACC,IAAI,KAAK,OAAO,iBACzB,QAAC,SAAS;QACR,YAAY,EAAE1C,YAAa;QAC3B,WAAW,EAAE2C,WAAY;QACzB,WAAW,EAAEvB,WAAY;QACzB,aAAa,EAAEwB,aAAc;QAC7B,YAAY,EAAE9B,YAAa;QAC3B,YAAY,EAAE+B,YAAa;QAC3B,WAAW,EAAEzC;MAAY;QAAA;QAAA;QAAA;MAAA,QAE5B,EAGAqC,SAAS,CAACC,IAAI,KAAK,QAAQ,iBAC1B,QAAC,UAAU;QACT,YAAY,EAAE1C,YAAa;QAC3B,QAAQ,EAAE8C,QAAS;QACnB,UAAU,EAAElC,UAAW;QACvB,UAAU,EAAE4B,UAAW;QACvB,QAAQ,EAAE7B,QAAS;QACnB,OAAO,EAAED;MAAQ;QAAA;QAAA;QAAA;MAAA,QAEpB,EAGAR,SAAS,iBACR,QAAC,WAAW;QACV,MAAM,EAAEE,WAAY;QACpB,KAAK,GAAGF,SAAS,EAAEC,YAAY,CAAE;QACjC,UAAU,EAAEE,UAAW;QACvB,eAAe,EAAEJ;MAAgB;QAAA;QAAA;QAAA;MAAA,QAEpC;IAAA;MAAA;MAAA;MAAA;IAAA;EACO;IAAA;IAAA;IAAA;EAAA,QACL;AAEX;AAAC,KApKQF,SAAS;AAsKlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}